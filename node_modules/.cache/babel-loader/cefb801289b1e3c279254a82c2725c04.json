{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nvar _utils = require(\"./utils\");\nvar _type = require(\"./type\");\nfunction clear(element) {\n  var _element$selectionSta, _element$selectionEnd;\n  if (!(0, _utils.isElementType)(element, ['input', 'textarea'])) {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n  if ((0, _utils.isDisabled)(element)) {\n    return;\n  } // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n  var elementType = element.type;\n  if (elementType !== 'textarea') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    ;\n    element.type = 'text';\n  }\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: (_element$selectionSta = element.selectionStart) != null ? _element$selectionSta : /* istanbul ignore next */\n    undefined,\n    initialSelectionEnd: (_element$selectionEnd = element.selectionEnd) != null ? _element$selectionEnd : /* istanbul ignore next */\n    undefined\n  });\n  if (elementType !== 'textarea') {\n    ;\n    element.type = elementType;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}