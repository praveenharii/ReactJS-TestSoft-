{"version":3,"sources":["images/TestSoftLogo.png","Components/LoaderSpinner.js","Pages/dashboard.js","Components/upComingTestCalender.js","Components/Footer.js","Components/Login-Logout-Activity.js","config.js","Pages/Topsidenavbar/loginnavbar.js","Pages/login.js","Pages/firebase_config.js","Components/SignUpSpinner.js","Pages/signup.js","Pages/resetpassword.js","Pages/Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes.js","Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes.js","Pages/ViewUsers.js","Pages/Topsidenavbar/dash-basicTop-bar-Students-Routes.js","Pages/editProfile.js","Pages/createUser.js","Exam/createExam.js","Pages/ErrorPage.js","Exam/viewSubjects.js","Exam/ViewTest.js","Exam/viewQuestions.js","Exam/tutorEditQuestions.js","Exam/viewResults-Subject-Test.js","Exam/viewResults-Test-allStudentResults.js","Pages/adminUserApproval.js","Exam/tutorViewSubjects-Test.js","Exam/tutorViewResults-Subject-Test.js","Pages/tutorViewUsers.js","Components/Spinner.js","Pages/Topsidenavbar/takeExamTopbar.js","Exam/studentTakeTest.js","Exam/studentViewResults.js","Exam/studentViewTest.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","d","__webpack_exports__","App","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mdb_react_ui_kit__WEBPACK_IMPORTED_MODULE_1__","React","createElement","style","display","justifyContent","alignItems","height","MDBSpinner","grow","className","color","AdminDashboard","lazy","e","then","bind","TutorDashboard","StudentDashboard","Promise","all","baseUrl","require","Dashboard","_useState","useState","_useState2","_slicedToArray","userData","setUserData","_useState3","_useState4","adminDashboard","setAdminDashboard","_useState5","_useState6","tutorDashboard","setTutorDashboard","_useState7","_useState8","setStudentDashboard","navigate","useNavigate","token","localStorage","getItem","_useState9","_useState10","loading","setLoading","useEffect","updatedProfileData","JSON","parse","removeItem","fetch","concat","method","crossDomain","headers","Content-Type","Accept","Access-Control-Allow-Origin","Authorization","body","stringify","window","res","json","data","console","log","userType","alert","clear","location","href","Spinner","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","upComingTestCalender","_ref","userId","_id","testData","setTestData","fetchTestCalendarData","_ref2","_asyncToGenerator","_callee","response","_context","t0","apply","arguments","Calendar","tileContent","_ref3","formattedDate","date","toISOString","split","test","find","onClick","id","subjectName","testName","calendarType","Footer","width","xlinkHref","LoginLogoutActivity","activityData","setActivityData","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","dateString","Date","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","Loginnavigation","Fragment","Navbar","bg","variant","Container","Brand","Nav","Item","Link","disabled","Toggle","aria-controls","Collapse","as","to","Login","email","setEmail","password","setPassword","setAlert","successLogin","setSuccessLogin","ToastContainer","onSubmit","preventDefault","status","toast","autoClose","setItem","setTimeout","htmlFor","placeholder","onChange","target","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","role","SignUp","fname","setFname","lname","setLname","phoneNumber","setPhoneNumber","_useState11","_useState12","otp","setOTP","_useState13","_useState14","setUserType","_useState15","_useState16","secretKey","setSecretKey","_useState17","_useState18","verified","setVerified","_useState19","_useState20","showOTP","setShowOTP","backgroundImage","marginTop","background","backdropFilter","loadingToastId","success","dismiss","warning","position","POSITION","BOTTOM_CENTER","Form","Select","size","required","selected","phoneNumberWithCountryCode","recaptchaVerifier","RecaptchaVerifier","callback","appVerifier","signInWithPhoneNumber","confirmationResult","confirm","verifyOTP","ResetPassword","_Component","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","handleSubmit","_assertThisInitialized","_inherits","_createClass","_this2","setState","Component","NavScrollExample","expand","fluid","MDBNavbarBrand","src","AppLogo","alt","borderRadius","maxHeight","navbarScroll","NavDropdown","title","Divider","Button","redirectURL","origin","decodedToken","jwt_decode","ViewUsers","setData","limit","setLimit","pageCount","setPageCount","currentPage","useRef","searchQuery","setSearchQuery","searchResults","setSearchResults","current","interval","setInterval","getPaginatedUsers","clearInterval","deleteUser","userid","TopNavBar","TutorTopNavBar","aria-describedby","Table","striped","bordered","hover","responsive","colSpan","map","FontAwesomeIcon","icon","faUserShield","marginLeft","isOnline","faCheckCircle","faTimesCircle","OverlayTrigger","placement","overlay","ReactPaginate","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","marginPagesDisplayed","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","forcePage","StudentTopbar","EditProfile","useLocation","oldPassword","setOldPassword","newPassword","setNewPassword","retypeNewPassword","setRetypeNewPassword","passwordMatchError","setPasswordMatchError","Alert","useParams","showPassword","setShowPassword","_useState21","_useState22","education","setEducation","_useState23","_useState24","changePassword","setChangePassword","toggleShowPassword","prevState","handleUpdateProfile","requestBody","authorizationHeader","get","newToken","StudentTopNavBar","AdminTopNavBar","BsEyeSlash","BsEye","MDBBtn","checkCurrentPassword","CreateUser","TopDashbar","CreateExamForm","setSubjectName","setTestName","setDate","timeLimit","setTimeLimit","testPassword","settestPassword","question","options","answer","questions","setQuestions","handleInputChange","event","index","_event$target","updatedQuestions","_toConsumableArray","some","q","o","subject","message","_x","TopBar","MDBInput","option","optionIndex","handleOptionChange","Control","BsPlusCircle","BsDashCircle","ErrorPage","ViewSubject","getAllSubject","Topbar","faSquareArrowUpRight","subjectid","faTrash","ViewTest","getAllTest","createdBy","createdAt","toLocaleString","availableUntil","currentDate","class","isTestAvailable","ViewQuestions","_useParams","testid","AdminTopbar","TutorTopbar","substring","BiRadioCircleMarked","indexOf","handleNavigate","EditQuestions","testname","formatDate","updatedData","_data","ok","viewResultsSubjectTest","selectedSubject","setSelectedSubject","viewTest","handleDownloadTest","_callee2","blob","contentDispositionHeader","filename","link","_context2","document","URL","createObjectURL","download","click","remove","_x2","MDBRow","MDBCol","activeKey","onSelect","eventKey","MDBTable","MDBTableHead","dark","scope","MDBTableBody","tests","testId","handleNavigateTOviewResults","AdminViewResultsSubjectAndTest","show","setShow","score","setScore","resultsID","setResultsID","username","setUsername","alertModal","setAlertModal","viewAllStudentResults","toggleAlertModal","handleClose","handleEditScore","editScore","selectedResultID","deleteResult","_callee3","_context3","text","_x3","TutorTopBar","MDBModal","animation","tabIndex","onHide","MDBModalDialog","side","MDBModalContent","MDBModalHeader","MDBModalTitle","MDBModalBody","MDBModalFooter","md","lg","totalQuestions","percentageScore","toFixed","toLocaleDateString","toLocaleTimeString","margin","handleShow","Modal","Header","closeButton","Title","Body","Group","controlId","Label","autoFocus","adminUserApproval","getAllPendingUsers","verifyUser","AdminTopBar","faCheck","faPersonCircleXmark","TutorViewSubjects","setError","getAllSubjects","handleNavigateToViewQuestions","tutorViewResultsSubjectTest","marginRight","TutorViewUsers","MDBNavbar","sticky","light","bgColor","MDBContainer","StudentTakeTest","setTest","userAnswers","setUserAnswers","timeRemaining","setTimeRemaining","subjectname","taketestid","setSubmitted","initialTimestamp","setInitialTimestamp","timeRemainingFormatted","moment","duration","format","trim","asSeconds","storedTimestamp","parseInt","now","toString","timer","currentTime","elapsedSeconds","Math","floor","remainingSeconds","handleSubmitTest","answers","handleBackButton","history","pushState","pathname","addEventListener","removeEventListener","Stack","direction","gap","Badge","Card","questionIndex","selectedOption","prevAnswers","_objectSpread","_defineProperty","StudentViewResults","studentResults","setStudentResults","results","fetchStudentResults","fetchResults","fontSize","SubjectTests","setTests","currentTest","setCurrentTest","_fetchData","fetchData","BsPlay","isLoggedIn","useAuth","ProtectedRoutes","_useAuth","includes","Outlet","Navigate","TutorProtectedRoutes","_useAuth2","Router","Suspense","fallback","Routes","Route","exact","path","element","TutorViewSubjectsAndTests","TutorEditTestQuestions","AdminApproveUser","AdminViewTestsList","AdminViewAllStudentResults","TutorViewStudentResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.32ed3c33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TestSoftLogo.6427e942.png\";","import React from \"react\";\r\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <MDBSpinner grow className=\"mx-2\" color=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </MDBSpinner>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState }from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from \"../Components/LoaderSpinner\"\r\n// import AdminDashboard from './adminDashboard';\r\n// import StudentDashboard from \"./studentDashboard\";\r\n// import TutorDashboard from \"./tutorDashboard\";\r\nconst AdminDashboard = React.lazy(() => import(\"./adminDashboard\"));\r\nconst TutorDashboard = React.lazy(() => import(\"./tutorDashboard\"));\r\nconst StudentDashboard = React.lazy(() => import(\"./studentDashboard\"));\r\nconst baseUrl = require(\"../config\");\r\n\r\n\r\nexport default function Dashboard() {\r\n               const [userData, setUserData] = useState({});\r\n               const [adminDashboard, setAdminDashboard] = useState(false);\r\n               const [tutorDashboard, setTutorDashboard] =useState(false);\r\n               const [studentDashboard, setStudentDashboard] =useState(false);\r\n               const navigate = useNavigate();\r\n               const token = localStorage.getItem(\"token\"); \r\n               const [loading, setLoading] = useState(true); \r\n\r\n                 useEffect(() => {\r\n                    const updatedProfileData = JSON.parse(\r\n                      localStorage.getItem(\"updatedProfileData\")\r\n                    );\r\n                   if(updatedProfileData){\r\n                     setUserData(updatedProfileData);\r\n                     localStorage.removeItem(\"updatedProfileData\");\r\n                   } else {     \r\n                   fetch(`${baseUrl}/userData`, {\r\n                     method: \"POST\",\r\n                     crossDomain: true,\r\n                     headers: {\r\n                       \"Content-Type\": \"application/json\",\r\n                       Accept: \"application/json\",\r\n                       \"Access-Control-Allow-Origin\": \"*\",\r\n                       Authorization: `Bearer ${token}`,\r\n                     },\r\n                     body: JSON.stringify({\r\n                       token: window.localStorage.getItem(\"token\"),\r\n                     }),\r\n                   })\r\n                     .then((res) => res.json())\r\n                     .then((data) => {\r\n                       console.log(data, \"userData\");\r\n\r\n                       setUserData(data.data);\r\n\r\n                       if (data.data.userType === \"Admin\") {\r\n                         setAdminDashboard(true);\r\n                       }\r\n                       if (data.data.userType === \"Tutor\") {\r\n                         setTutorDashboard(true);\r\n                       }\r\n                       if (data.data.userType === \"Student\") {\r\n                         setStudentDashboard(true);\r\n                       }\r\n\r\n                       setLoading(false);\r\n\r\n                       if (data.data == \"token expired\") {\r\n                         alert(\"Token Expired!!Login again..\");\r\n                         window.localStorage.clear();\r\n                         window.location.href = \"./sign-in\";\r\n                       }\r\n                     });\r\n                   \r\n                  }\r\n                 }, [navigate]);\r\n                 \r\n                 if (loading) {\r\n                   return <Spinner />;\r\n                 }\r\n\r\n                return adminDashboard ? (\r\n                  <AdminDashboard userData={userData} />\r\n                ) : (\r\n                  tutorDashboard ? (\r\n                   <TutorDashboard userData={userData} />\r\n                ) : (\r\n                   <StudentDashboard userData={userData} />\r\n                )\r\n\r\n              );\r\n}\r\n\r\n\r\n              ","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport '../Exam/Styles/calender.css'\r\nconst baseUrl = require(\"../config\");\r\nexport default function upComingTestCalender({ userData }) {\r\n    const navigate = useNavigate();\r\n    const userId = userData._id;\r\n const [testData, setTestData] = useState([]);\r\n\r\n useEffect(() => {\r\n   fetchTestCalendarData();\r\n }, []);\r\n\r\n const fetchTestCalendarData = async () => {\r\n   try {\r\n     const response = await fetch(`${baseUrl}/upComingTestCalender`);\r\n     const data = await response.json();\r\n     setTestData(data.data);\r\n   } catch (error) {\r\n     console.error(\"Error fetching test data:\", error);\r\n   }\r\n };\r\n\r\n  const tileContent = ({ date }) => {\r\n    const formattedDate = date.toISOString().split(\"T\")[0];\r\n    const test = testData.find((test) => test.date === formattedDate);\r\n    if (test) {\r\n\r\n        function ViewAvailableTests() {\r\n          navigate(\"/dashboard/SubjectTests\", {\r\n            state: {\r\n              id: userId,\r\n              userData: userData,\r\n            },\r\n          });\r\n        }\r\n\r\n      return (\r\n        <div onClick={ViewAvailableTests}>\r\n        <div className=\"test-tile\">\r\n          <div className=\"test-date\">{test.subjectName}</div>\r\n          <div className=\"test-name\">{test.testName}</div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Upcoming Test Calendar</h3>\r\n      <Calendar\r\n        tileContent={tileContent}\r\n        calendarType=\"US\"\r\n        className=\"custom-calendar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <footer className=\"d-flex flex-wrap justify-content-between align-items-right py-3 my-4 border-top\">\r\n        <div className=\"col-md-4 d-flex align-items-right\">\r\n          <a\r\n            href=\"/\"\r\n            className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\"\r\n          >\r\n            <svg className=\"bi\" width={30} height={24}>\r\n              <use xlinkHref=\"#bootstrap\" />\r\n            </svg>\r\n          </a>\r\n          <span className=\"text-muted\">© 2023 TestSoft, Inc</span>\r\n        </div>\r\n        {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\r\n          <li className=\"ms-3\">\r\n            <a className=\"text-muted\" href=\"/\">\r\n              <svg className=\"bi\" width={24} height={24}>\r\n                <use xlinkHref=\"#twitter\" />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n          <li className=\"ms-3\">\r\n            <a className=\"text-muted\" href=\"/\">\r\n              <svg className=\"bi\" width={24} height={24}>\r\n                <use xlinkHref=\"#instagram\" />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n          <li className=\"ms-3\">\r\n            <a className=\"text-muted\" href=\"/\">\r\n              <svg className=\"bi\" width={24} height={24}>\r\n                <use xlinkHref=\"#facebook\" />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n        </ul> */}\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nconst baseUrl = require(\"../config\");\r\n\r\nexport default function LoginLogoutActivity() {\r\n  const [activityData, setActivityData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${baseUrl}/activity-data`)\r\n      .then((response) => response.json())\r\n      .then((data) => setActivityData(data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split(\"T\")[0]; // Extract only the date portion\r\n  };\r\n\r\n  return (\r\n    <LineChart width={600} height={400} data={activityData}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"date\" tickFormatter={formatDate} />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type=\"monotone\"\r\n        dataKey=\"logins\"\r\n        stroke=\"#8884d8\"\r\n        activeDot={{ r: 8 }}\r\n      />\r\n      <Line\r\n        type=\"monotone\"\r\n        dataKey=\"logouts\"\r\n        stroke=\"#82ca9d\"\r\n        activeDot={{ r: 8 }}\r\n      />\r\n    </LineChart>\r\n  );\r\n}\r\n","const baseUrl = \"https://sparkling-sneakers-bee.cyclic.app\";\r\n\r\nmodule.exports = baseUrl;\r\n// https://sparkling-sneakers-bee.cyclic.app  http://localhost:5000","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\n\r\nexport default function Loginnavigation() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand>TestSoft</Navbar.Brand>\r\n          <Nav className=\"mx-auto\">\r\n            <Nav.Item>\r\n              <Nav.Link disabled>Welcome to TestSoft Examination System</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Navbar.Toggle aria-controls=\"navbar-nav\" />\r\n          <Navbar.Collapse id=\"navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link as={Link} to=\"/sign-in\">\r\n                Login\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/sign-up\">\r\n                Sign Up\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","import React, {  useState  } from 'react'\r\nimport Loginnavigation from './Topsidenavbar/loginnavbar.js';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../App.css'\r\nconst baseUrl = require(\"../config\");\r\n\r\nexport default function Login()  {\r\n        const [email ,setEmail] =  useState(\"\");\r\n        const [password ,setPassword] =  useState(\"\");\r\n        const [alert, setAlert] = useState(null);\r\n        const [successLogin, setSuccessLogin] = useState(null);\r\n\r\n   function handleSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    console.log( email, password);\r\n    \r\n    fetch(`${baseUrl}/login-user`, {\r\n      method: \"POST\",\r\n      crossDomain: true,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        try {\r\n          if (data.status === \"ok\") {\r\n            toast(\"Successfully Logged In\", {\r\n              type: \"success\",\r\n              autoClose: 5000,\r\n            });\r\n            setSuccessLogin(\"Login Successfully\");\r\n            window.localStorage.setItem(\r\n              \"token\",\r\n              data.data\r\n            ); /*storing token in nodejs(localStorage)*/\r\n            window.localStorage.setItem(\"loggedIn\", true); \r\n\r\n             setTimeout(() => {\r\n               window.location.href = \"./dashboard\";\r\n             }, 5000);\r\n          }\r\n          if (data.error === \"User does not exist\") {\r\n            setAlert(\"User Not Exist\");\r\n          }\r\n          if (data.status === \"error\") {\r\n            setAlert(\"Wrong Password, please try again..\");\r\n          }\r\n          if (\r\n            data.error ===\r\n            \"You are not a verified, please wait for admin to accept your Sign Up request!!!\"\r\n          ) {\r\n            setAlert(\r\n              \"You are not a verified, please wait for admin to accept your Sign Up request!!!\"\r\n            );\r\n          }      \r\n          if (\r\n            data.error ===\r\n            \"You are already logged in from another tab or browser.\"\r\n          ) {\r\n            setAlert(\"You are already logged in from another tab or browser.\");\r\n          } else {\r\n            //alert(data.error);\r\n          }\r\n        } catch (error) {\r\n          setAlert(error);\r\n        }\r\n\r\n      });\r\n}\r\n\r\n\r\n    \r\n        return (\r\n          <>\r\n            <Loginnavigation />\r\n            <div className=\"signup-container\">\r\n              <ToastContainer />\r\n              <div className=\"signup-card\">\r\n                <h2 className=\"signup-title\">Sign In now</h2>\r\n                <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"EmailAddress\">Email Address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter password\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"newsletter\"\r\n                      className=\"form-check-input\"\r\n                    />\r\n                    <label htmlFor=\"newsletter\" className=\"form-check-label\">\r\n                      Remember Me\r\n                    </label>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                    Sign In\r\n                  </button>\r\n                  {alert && (\r\n                    <div className=\"d-grid\">\r\n                      <button type=\"alert\" className=\"alert alert-danger mt-3\">\r\n                        {alert}\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  {successLogin && (\r\n                    <div className=\"d-grid\">\r\n                      <button type=\"alert\" className=\"alert alert-success mt-3\">\r\n                        {successLogin}\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  <p className=\"forgot-password text-right\">\r\n                    Click here to <a href=\"/forgot-password\">Forgot Password</a>\r\n                  </p>\r\n                  <p className=\"forgot-password text-right\">\r\n                    Click here to <a href=\"/sign-up\">Sign Up</a>\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBlzrcXQlOvoL7HIU8k4lJRgQnR3qe6H7k\",\r\n  authDomain: \"verify-c5efb.firebaseapp.com\",\r\n  projectId: \"verify-c5efb\",\r\n  storageBucket: \"verify-c5efb.appspot.com\",\r\n  messagingSenderId: \"337216048761\",\r\n  appId: \"1:337216048761:web:1aa1bfbfd3ef97d9eb4ea8\",\r\n  measurementId: \"G-F2E1R164ME\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n","import React from \"react\";\r\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <MDBSpinner role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </MDBSpinner>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"./firebase_config\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport Loginnavigation from \"./Topsidenavbar/loginnavbar.js\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"../App.css\";\r\nimport Spinner from '../Components/SignUpSpinner'\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst baseUrl = require(\"../config\");\r\nexport default function SignUp() {\r\n            const navigate = useNavigate();\r\n            const [fname ,setFname] =  useState(\"\");\r\n            const [lname ,setLname] =  useState(\"\");\r\n            const [email ,setEmail] =  useState(\"\");\r\n            const [phoneNumber ,setPhoneNumber] =  useState(\"\");\r\n            const [password ,setPassword] =  useState(\"\");           \r\n             const [otp,setOTP] = useState(\"\");\r\n            const [userType, setUserType] = useState(\"\");\r\n            const [secretKey, setSecretKey] = useState(\"\");\r\n            const [verified,setVerified] = useState(false);\r\n            const [showOTP, setShowOTP] = useState(false);\r\n\r\n      \r\nconst generateRecaptcha = () => {\r\n  window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\r\n            'size': 'invisible',\r\n            'callback': (response) => {\r\n              console.log(response);\r\n            }\r\n          },        \r\n          auth\r\n        );\r\n}         \r\n    const requestOTP = (e) =>{\r\n      e.preventDefault();\r\n      if (phoneNumber.length >=10 ){\r\n        //setExpandForm(true);\r\n        const phoneNumberWithCountryCode = \"+60\" + phoneNumber;\r\n        generateRecaptcha();\r\n        let appVerifier =  window.recaptchaVerifier;\r\n        signInWithPhoneNumber(auth, phoneNumberWithCountryCode, appVerifier)\r\n          .then((confirmationResult) => {\r\n            window.confirmationResult = confirmationResult;\r\n            setShowOTP(true);\r\n          })\r\n          .catch((error) => {\r\n            // Error; SMS not sent\r\n            // ...\r\n             console.log(error);\r\n             alert(error);\r\n          });\r\n          }\r\n        } \r\n\r\n    const verifyOTP = (otp) => {\r\n       if (otp.length === 6) {\r\n         window.confirmationResult\r\n           .confirm(otp)\r\n           .then((result) => {\r\n             console.log(result);         \r\n             toast.success(\"Verified Successfully\");\r\n             setVerified(true);\r\n           })\r\n           .catch((error) => {\r\n             console.log(error);\r\n           });\r\n       }\r\n    }       \r\n  \r\n\r\n    // const handleSubmit = (e) => {\r\n      \r\n    //    if (userType === \"Tutor\" && secretKey !== \"Secret\") {\r\n    //         e.preventDefault();\r\n    //         alert(\"Invalid Tutor\");\r\n    //       }\r\n    //       else{\r\n\r\n    //         e.preventDefault();\r\n    //         if (verified !== false){ \r\n    //            const loadingToastId = toast.info(<Spinner />, {\r\n    //              autoClose: false,\r\n    //            });\r\n                    \r\n            \r\n    //         fetch(`${baseUrl}/register`, {\r\n    //           method: \"POST\",\r\n    //           crossDomain: true,\r\n    //           headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Accept: \"application/json\",\r\n    //             \"Access-Control-Allow-Origin\": \"*\",\r\n    //           },\r\n    //           body: JSON.stringify({\r\n    //             fname,\r\n    //             lname,\r\n    //             email,\r\n    //             phoneNumber,\r\n    //             password,\r\n    //             userType,\r\n    //           }),\r\n    //         })\r\n    //           .then((res) => res.json())\r\n    //           .then((data) => {\r\n    //             if (data.error !== \"User Exists\") {\r\n    //               console.log(data, \"userRegister\");\r\n    //              toast.success(\"Sign up successful\");\r\n    //              setTimeout(() => {\r\n    //                 toast.dismiss(loadingToastId);\r\n    //                 navigate(\"/sign-in\"); // Navigate to login page\r\n    //               }, 5000);\r\n    //             } else {\r\n    //               alert(data.error);\r\n    //             }\r\n    //           });\r\n    //           }else{\r\n    //         alert(\"Please Verify Phone Number\");\r\n    //           }\r\n    //   } \r\n    // };\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      // Password validation regular expression\r\n      const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\r\n\r\n      if (!regularExpression.test(password)) {\r\n        toast.warning(\r\n          \"Password should have at least one digit, one special character, and be 6-16 characters long.\",\r\n          {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          }\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (userType === \"Tutor\" && secretKey !== \"Secret\") {\r\n         toast.warning(\"Invalid Tutor\", {\r\n           position: toast.POSITION.BOTTOM_CENTER,\r\n         });\r\n        return;\r\n      }\r\n\r\n      if (verified === false) {\r\n        toast.warning(\"Please Verify Phone Number\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const loadingToastId = toast.info(<Spinner />, {\r\n        autoClose: false,\r\n      });\r\n\r\n      fetch(`${baseUrl}/register`, {\r\n        method: \"POST\",\r\n        crossDomain: true,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          fname,\r\n          lname,\r\n          email,\r\n          phoneNumber,\r\n          password,\r\n          userType,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error !== \"User Exists\") {\r\n            console.log(data, \"userRegister\");\r\n            toast.success(\"Sign up successful\");\r\n            setTimeout(() => {\r\n              toast.dismiss(loadingToastId);\r\n              navigate(\"/sign-in\"); // Navigate to login page\r\n            }, 5000);\r\n          } else {\r\n            alert(data.error);\r\n          }\r\n        });\r\n    };\r\n\r\n         return (\r\n           <>\r\n             <Loginnavigation />\r\n             <section className=\"text-center\">\r\n               <ToastContainer />\r\n               <div\r\n                 className=\"p-5 bg-image\"\r\n                 style={{\r\n                   backgroundImage:\r\n                     \"url('https://mdbootstrap.com/img/new/textures/full/171.jpg')\",\r\n                   height: \"300px\",\r\n                 }}\r\n               ></div>\r\n               <div\r\n                 className=\"card mx-4 mx-md-5 shadow-5-strong\"\r\n                 style={{\r\n                   marginTop: \"-100px\",\r\n                   background: \"hsla(0, 0%, 100%, 0.8)\",\r\n                   backdropFilter: \"blur(30px)\",\r\n                 }}\r\n               >\r\n                 <div className=\"card-body py-5 px-md-5\">\r\n                   <div className=\"row d-flex justify-content-center\">\r\n                     <div className=\"col-lg-8\">\r\n                       <h2 className=\"fw-bold mb-5\">Sign up now</h2>\r\n                       <form onSubmit={handleSubmit}>\r\n                         <div id=\"recaptcha-container\"></div>\r\n                         <div className=\"form-outline mb-4\">\r\n                           <div className=\"form-outline mb-4\">\r\n                             <Form.Select\r\n                               className=\"form-control border border-dark text-center\"\r\n                               size=\"sm\"\r\n                               onChange={(e) => setUserType(e.target.value)}\r\n                               required\r\n                             >\r\n                               <option value=\"\" disabled selected>\r\n                                 Select User Type\r\n                               </option>\r\n                               <option value=\"Student\">Student</option>\r\n                               <option value=\"Tutor\">Tutor</option>\r\n                             </Form.Select>\r\n                             <label className=\"form-label visually-hidden\">\r\n                               User Type\r\n                             </label>\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"row\">\r\n                           <div className=\"col-md-6 mb-4\">\r\n                             <div className=\"form-outline\">\r\n                               <label\r\n                                 className=\"form-label\"\r\n                                 htmlFor=\"form3Example1\"\r\n                               >\r\n                                 First name\r\n                               </label>\r\n                               <input\r\n                                 type=\"text\"\r\n                                 id=\"form3Example1\"\r\n                                 className=\"form-control border border-dark\"\r\n                                 onChange={(e) => setFname(e.target.value)}\r\n                                 required\r\n                               />\r\n                             </div>\r\n                           </div>\r\n                           <div className=\"col-md-6 mb-4\">\r\n                             <div className=\"form-outline\">\r\n                               <label\r\n                                 className=\"form-label\"\r\n                                 htmlFor=\"form3Example2\"\r\n                               >\r\n                                 Last name\r\n                               </label>\r\n                               <input\r\n                                 type=\"text\"\r\n                                 id=\"form3Example2\"\r\n                                 className=\"form-control border border-dark\"\r\n                                 onChange={(e) => setLname(e.target.value)}\r\n                                 required\r\n                               />\r\n                             </div>\r\n                           </div>\r\n                         </div>\r\n\r\n                         {userType === \"Tutor\" ? (\r\n                           <div className=\"form-outline mb-4\">\r\n                             <label\r\n                               className=\"form-label\"\r\n                               htmlFor=\"form3Example3\"\r\n                             >\r\n                               Secret Key\r\n                             </label>\r\n                             <input\r\n                               type=\"text\"\r\n                               className=\"form-control border border-dark\"\r\n                               placeholder=\"Secret Key\"\r\n                               onChange={(e) => setSecretKey(e.target.value)}\r\n                             />\r\n                           </div>\r\n                         ) : null}\r\n\r\n                         <div className=\"form-outline mb-4\">\r\n                           <label\r\n                             className=\"form-label\"\r\n                             htmlFor=\"form3Example3\"\r\n                           >\r\n                             Email address\r\n                           </label>\r\n                           <input\r\n                             type=\"email\"\r\n                             id=\"form3Example3\"\r\n                             className=\"form-control border border-dark\"\r\n                             onChange={(e) => setEmail(e.target.value)}\r\n                             required\r\n                           />\r\n                         </div>\r\n\r\n                         <div className=\"form-outline mb-4\">\r\n                           <label\r\n                             className=\"form-label\"\r\n                             htmlFor=\"form3Example4\"\r\n                           >\r\n                             Phone Number\r\n                           </label>\r\n                           <input\r\n                             type=\"phoneNumber\"\r\n                             id=\"form3Example4\"\r\n                             className=\"form-control border border-dark\"\r\n                             onChange={(e) => setPhoneNumber(e.target.value)}\r\n                             required\r\n                           />\r\n                           <button\r\n                             type=\"button\"\r\n                             value={\"Request OTP\"}\r\n                             onClick={requestOTP}\r\n                             className=\"btn btn-primary btn-block mb-4\"\r\n                           >\r\n                             Request OTP\r\n                           </button>\r\n                         </div>\r\n                         {showOTP && (\r\n                           <div className=\"form-outline mb-4\">\r\n                             <label\r\n                               className=\"form-label\"\r\n                               htmlFor=\"form3Example4\"\r\n                             >\r\n                               OTP\r\n                             </label>\r\n                             <input\r\n                               type=\"OTP\"\r\n                               id=\"form3Example4\"\r\n                               className=\"form-control border border-dark\"\r\n                               onChange={(e) => setOTP(e.target.value)}\r\n                               required\r\n                             />\r\n                             <button\r\n                               type=\"button\"\r\n                               value=\"Verify\"\r\n                               onClick={() => verifyOTP(otp)}\r\n                               className=\"btn btn-primary btn-block mb-4\"\r\n                             >\r\n                               Verify OTP\r\n                             </button>\r\n                           </div>\r\n                         )}\r\n                         <div className=\"form-outline mb-4\">\r\n                           <label\r\n                             className=\"form-label\"\r\n                             htmlFor=\"form3Example4\"\r\n                           >\r\n                             Password\r\n                           </label>\r\n                           <input\r\n                             type=\"password\"\r\n                             id=\"form3Example4\"\r\n                             className=\"form-control border border-dark\"\r\n                             onChange={(e) => setPassword(e.target.value)}\r\n                             required\r\n                           />\r\n                         </div>\r\n\r\n                         <button\r\n                           type=\"submit\"\r\n                           className=\"btn btn-primary btn-block mb-4\"\r\n                         >\r\n                           Sign up\r\n                         </button>\r\n                       </form>\r\n\r\n                       <p className=\"forgot-password text-right\">\r\n                         Already registered <a href=\"/sign-in\">sign in?</a>{\" \"}\r\n                       </p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </section>\r\n           </>\r\n         );     \r\n  };\r\n\r\n        \r\n\r\n       \r\n\r\n\r\n\r\n   \r\n       \r\n    \r\n","import React, { Component } from 'react'\r\nconst baseUrl = require(\"../config\");\r\nexport default class ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this); //binding function\r\n    }\r\n\r\n    handleSubmit(e) { /*submit function*/\r\n        e.preventDefault();\r\n        const { email } = this.state;\r\n        console.log(email);\r\n        \r\n        /* sending login-user API*/\r\n        fetch(`${baseUrl}/forgot-password`, {\r\n          method: \"POST\",\r\n          crossDomain: true,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n          body: JSON.stringify({\r\n            /*passing email*/\r\n            email,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data, \"userRegister\");\r\n            alert(data.status);\r\n          });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <br />\r\n            <div className=\"auth-inner\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <h3>Forgot Password</h3>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label>Email address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"d-grid\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n                <p className=\"forgot-password text-right\">\r\n                  <a href=\"/sign-up\">Click here to Sign Up</a>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Dashboard from './../dashboard';\r\nimport {\r\n  MDBNavbarBrand,\r\n} from \"mdb-react-ui-kit\";\r\nimport AppLogo from \"../../images/TestSoftLogo.png\";\r\nconst baseUrl = require(\"../../config\");\r\nfunction NavScrollExample() {\r\n\r\n  const logOut = () => {\r\n   fetch(`${baseUrl}/logout`, {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n       token: localStorage.getItem(\"token\"),\r\n     },\r\n   })\r\n     .then((response) => response.json())\r\n     .then((data) => {\r\n       if (data.status === \"ok\") {\r\n         console.log(\"Logout Succesfully\");\r\n         window.localStorage.clear();\r\n         const signInPath = \"/sign-in\"; // Update this with your actual sign-in page path\r\n         const redirectURL = window.location.origin + signInPath;\r\n         window.location.href = redirectURL;\r\n       } else {\r\n         console.log(\"Logout error:\", data.error);\r\n       }\r\n     })\r\n     .catch((error) => {\r\n       console.log(\"Logout error:\", error);\r\n     });\r\n  };\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container fluid>\r\n        <MDBNavbarBrand href=\"/\">\r\n          <img\r\n            src={AppLogo}\r\n            height=\"50\"\r\n            width=\"150\"\r\n            alt=\"\"\r\n            loading=\"lazy\"\r\n            style={{ borderRadius: \"10px\" }}\r\n          />\r\n        </MDBNavbarBrand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          >\r\n            <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n            <Nav.Link href=\"/dashboard/subjects\">View Subjects</Nav.Link>\r\n            <Nav.Link href=\"/dashboard/viewResultsTestsLists\">\r\n              View Student Results\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Manage Users\" id=\"navbarScrollingDropdown\">\r\n              <NavDropdown.Item href=\"/dashboard/getAllUsers\">\r\n                View Users\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/dashboard/adminApproveUser\">\r\n                Pending Users\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"/dashboard/createUser\">\r\n                Create Users\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n\r\n          <Button onClick={logOut} variant=\"danger\">\r\n            LogOut\r\n          </Button>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavScrollExample;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport { MDBNavbarBrand } from \"mdb-react-ui-kit\";\r\nimport AppLogo from \"../../images/TestSoftLogo.png\";\r\nimport jwt_decode from \"jwt-decode\";\r\nconst baseUrl = require(\"../../config\");\r\n\r\nfunction NavScrollExample() {\r\n  let id = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  id = decodedToken.userId;\r\n  const navigate = useNavigate();\r\n\r\n  const logOut = () => {\r\n  fetch(`${baseUrl}/logout`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      token: localStorage.getItem(\"token\"),\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.status === \"ok\") {\r\n        console.log(\"Logout Succesfully\");\r\n        window.localStorage.clear();\r\n        const signInPath = \"/sign-in\"; // Update this with your actual sign-in page path\r\n        const redirectURL = window.location.origin + signInPath;\r\n        window.location.href = redirectURL;\r\n      } else {\r\n        console.log(\"Logout error:\", data.error);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Logout error:\", error);\r\n    });\r\n };\r\n\r\n function ViewSubject() {\r\n   navigate(`/subjects/${id}`);\r\n }\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container fluid>\r\n        <MDBNavbarBrand href=\"/\">\r\n          <img\r\n            src={AppLogo}\r\n            height=\"50\"\r\n            width=\"150\"\r\n            alt=\"\"\r\n            loading=\"lazy\"\r\n            style={{ borderRadius: \"10px\" }}\r\n          />\r\n        </MDBNavbarBrand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          >\r\n            <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n            <Nav.Link href=\"/dashboard/tutorViewUsers\">View Users</Nav.Link>\r\n            <NavDropdown title=\"Manage Exam\" id=\"navbarScrollingDropdown\">\r\n              <NavDropdown.Item href=\"/dashboard/createExam\">\r\n                Create Exam\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item onClick={ViewSubject}>\r\n                View Subjects\r\n              </NavDropdown.Item>\r\n\r\n              {/* <NavDropdown.Item href=\"#action5\">\r\n                Something else here\r\n              </NavDropdown.Item> */}\r\n            </NavDropdown>\r\n          </Nav>\r\n          {/* <Form className=\"d-flex\">\r\n            <Form.Control\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            \r\n          </Form> */}\r\n          <Button onClick={logOut} variant=\"danger\">\r\n            LogOut\r\n          </Button>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavScrollExample;\r\n","\r\nimport React, {useEffect, useState, useRef } from 'react';\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faUserShield,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from 'react-router-dom';\r\nimport ReactPaginate from \"react-paginate\";\r\nimport TopNavBar from \"./Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nimport TutorTopNavBar from \"./Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nimport { Table, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function ViewUsers() {\r\n     let userType =null;\r\n     const token = window.localStorage.getItem(\"token\");\r\n     const decodedToken = jwt_decode(token);\r\n     userType = decodedToken.userType;\r\n     const [data, setData] = useState([]);\r\n     const [limit, setLimit] = useState(10);\r\n     const [pageCount, setPageCount] = useState(1);\r\n     const currentPage = useRef();\r\n     const [loading, setLoading] = useState(true);\r\n     const [searchQuery, setSearchQuery] = useState(\"\");\r\n     const [searchResults, setSearchResults] = useState([]);\r\n     \r\n    //  const [userType, setUserType] = useState(\"\");\r\n  \r\n     useEffect(() => {\r\n      currentPage.current=1;\r\n       \r\n      \r\n      const interval = setInterval(getPaginatedUsers, 3000);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n     \r\n\r\n    const getAlluser = () =>{\r\n      fetch(`${baseUrl}/getAllUsers`, {\r\n        method: \"GET\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data, \"userData\");\r\n          setData(data.data);\r\n          //setUserType(data.data.userType);\r\n        });\r\n    }\r\n\r\n  \r\n\r\n     const deleteUser = (id,name) => {\r\n      if(window.confirm(`Please Click Ok if you want to delete user ${name}`)){\r\n        fetch(`${baseUrl}/deleteUser`, {\r\n          method: \"DELETE\",\r\n          crossDomain: true,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n          body: JSON.stringify({\r\n            userid: id,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            alert(data.data);\r\n            getAlluser();\r\n          });\r\n      }else{\r\n        console.log(\"Error\");\r\n      }\r\n     };\r\n\r\n      const makeRequestToDeleteUser = (id, name) => {\r\n        if (\r\n          window.confirm(`Please Click Ok if you want to Request Admin to delete user ${name}, admin will be notified by email.`)\r\n        ) {\r\n          fetch(`${baseUrl}/deleteUserRequest`, {\r\n            method: \"POST\",\r\n            crossDomain: true,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n            body: JSON.stringify({\r\n              userid: id,\r\n            }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              alert(data.data);\r\n            });\r\n        } else {\r\n          console.log(\"Error\");\r\n        }\r\n      };\r\n\r\n\r\n     function handlePageClick(e){\r\n      console.log(e);\r\n      currentPage.current=e.selected+1;\r\n      getPaginatedUsers();\r\n     }\r\n\r\n     function changeLimit(){\r\n      currentPage.current=1;\r\n      getPaginatedUsers();\r\n     }\r\n\r\n     function getPaginatedUsers(){\r\n      //setLoading(true);\r\n        fetch(\r\n          `${baseUrl}/paginatedUsers?page=${currentPage.current}&limit=${limit}`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        )\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data, \"userData\");\r\n            setPageCount(data.pageCount);\r\n            setData(data.result);\r\n            setLoading(false);\r\n          });\r\n     }\r\n\r\n     const handleSearch = () => {\r\n       fetch(`${baseUrl}/searchUsers?email=${searchQuery}`)\r\n         .then((res) => res.json())\r\n         .then((data) => {\r\n           setSearchResults(data);\r\n         });\r\n     };\r\n\r\n     useEffect(() => {\r\n       if (searchQuery === \"\") {\r\n         setSearchResults([]);\r\n       }\r\n     }, [searchQuery]);\r\n\r\n return (\r\n   <>\r\n     {userType === \"Admin\" ? <TopNavBar /> : <TutorTopNavBar />}\r\n\r\n     <br />\r\n     <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n       <div className=\"auth-inner\" style={{ width: \"900px\" }}>\r\n         <h3>View All Users</h3>\r\n         <div className=\"input-group mb-3\">\r\n           <input\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n             placeholder=\"Search by Email\"\r\n             aria-describedby=\"button-addon2\"\r\n             value={searchQuery}\r\n             onChange={(e) => setSearchQuery(e.target.value)}\r\n           />\r\n           <button\r\n             className=\"btn btn-outline-secondary\"\r\n             type=\"button\"\r\n             id=\"button-addon2\"\r\n             onClick={handleSearch}\r\n           >\r\n             Search\r\n           </button>\r\n         </div>\r\n         <Table striped bordered hover responsive>\r\n           <thead>\r\n             <tr>\r\n               <th>Name</th>\r\n               <th>New User Email</th>\r\n               <th>Phone Number</th>\r\n               <th>User Type</th>\r\n               <th>Verification</th>\r\n               <th>Status</th>\r\n               <th>Delete User</th>\r\n             </tr>\r\n           </thead>\r\n           {loading ? (\r\n             <tbody>\r\n               <tr>\r\n                 <td colSpan=\"6\">\r\n                   <div\r\n                     style={{\r\n                       display: \"flex\",\r\n                       justifyContent: \"center\",\r\n                       alignItems: \"center\",\r\n                       height: \"200px\",\r\n                     }}\r\n                   >\r\n                     <MDBSpinner type=\"border\" color=\"secondary\">\r\n                       <span className=\"visually-hidden\">Loading...</span>\r\n                     </MDBSpinner>\r\n                   </div>\r\n                 </td>\r\n               </tr>\r\n             </tbody>\r\n           ) : (\r\n             <tbody>\r\n               {(searchResults.length > 0 ? searchResults : data).map((i) => (\r\n                 <tr key={i._id}>\r\n                   <td>{`${i.fname} ${i.lname}`}</td>\r\n                   <td>{i.email}</td>\r\n                   <td>{i.phoneNumber}</td>\r\n                   <td>{i.userType}</td>\r\n                   <td>\r\n                     {i.status === \"verified\" ? (\r\n                       <div>\r\n                         <FontAwesomeIcon\r\n                           icon={faUserShield}\r\n                           style={{ color: \"green\" }}\r\n                         />\r\n                         <span style={{ marginLeft: \"5px\" }}>Verified</span>\r\n                       </div>\r\n                     ) : (\r\n                       <div>\r\n                         <FontAwesomeIcon\r\n                           icon={faUserShield}\r\n                           style={{ color: \"yellow\" }}\r\n                         />\r\n                         <span style={{ marginLeft: \"5px\" }}>Pending</span>\r\n                       </div>\r\n                     )}\r\n                   </td>\r\n                   <td>\r\n                     {i.isOnline ? (\r\n                       <div>\r\n                         <FontAwesomeIcon\r\n                           icon={faCheckCircle}\r\n                           style={{ color: \"green\" }}\r\n                         />\r\n                         <span style={{ marginLeft: \"5px\" }}>Online</span>\r\n                       </div>\r\n                     ) : (\r\n                       <div>\r\n                         <FontAwesomeIcon\r\n                           icon={faTimesCircle}\r\n                           style={{ color: \"red\" }}\r\n                         />\r\n                         <span style={{ marginLeft: \"5px\" }}>Offline</span>\r\n                       </div>\r\n                     )}\r\n                   </td>\r\n                   <td>\r\n                     {userType !== \"Tutor\" ? (\r\n                       <td>\r\n                         <Button\r\n                           variant=\"danger\"\r\n                           onClick={() => deleteUser(i._id, i.fname)}\r\n                         >\r\n                           Delete\r\n                         </Button>\r\n                       </td>\r\n                     ) : (\r\n                       <td>\r\n                         <OverlayTrigger\r\n                           placement=\"top\"\r\n                           overlay={<Tooltip>Request admin to delete</Tooltip>}\r\n                         >\r\n                           <Button\r\n                             variant=\"danger\"\r\n                             onClick={() =>\r\n                               makeRequestToDeleteUser(i._id, i.fname)\r\n                             }\r\n                           >\r\n                             Request\r\n                           </Button>\r\n                         </OverlayTrigger>\r\n                       </td>\r\n                     )}\r\n                   </td>\r\n                 </tr>\r\n               ))}\r\n             </tbody>\r\n           )}\r\n         </Table>\r\n         <br />\r\n         <div className=\"input-group mb-3\">\r\n           <input\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n             placeholder=\"Limit To View Users\"\r\n             aria-describedby=\"button-addon2\"\r\n             value={limit}\r\n             onChange={(e) => setLimit(e.target.value)}\r\n           />\r\n           <button\r\n             className=\"btn btn-outline-secondary\"\r\n             type=\"button\"\r\n             id=\"button-addon2\"\r\n             onClick={changeLimit}\r\n           >\r\n             Set Limit\r\n           </button>\r\n         </div>\r\n         <br />\r\n\r\n         <ReactPaginate\r\n           breakLabel=\"...\"\r\n           nextLabel=\"next >\"\r\n           onPageChange={handlePageClick}\r\n           pageRangeDisplayed={10}\r\n           pageCount={pageCount}\r\n           previousLabel=\"< previous\"\r\n           renderOnZeroPageCount={null}\r\n           marginPagesDisplayed={2}\r\n           containerClassName=\"pagination justify-content-center\"\r\n           pageClassName=\"page-item\"\r\n           pageLinkClassName=\"page-link\"\r\n           previousClassName=\"page-item\"\r\n           previousLinkClassName=\"page-link\"\r\n           nextClassName=\"page-item\"\r\n           nextLinkClassName=\"page-link\"\r\n           activeClassName=\"active\"\r\n           forcePage={currentPage.current - 1}\r\n         />\r\n       </div>\r\n     </div>\r\n   </>\r\n );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Dashboard from \"./../dashboard\";\r\nimport { MDBNavbarBrand } from \"mdb-react-ui-kit\";\r\nimport AppLogo from \"../../images/TestSoftLogo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst baseUrl = require(\"../../config\");\r\nfunction StudentTopbar() {\r\n   const navigate = useNavigate();\r\n  let id = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  id = decodedToken.userId;\r\n  \r\n  function ViewAvailableTests() {\r\n    navigate(\"/dashboard/SubjectTests\", {\r\n      state: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n\r\n  function ViewTestResults() {\r\n    navigate(\"/dashboard/viewTestResults\");\r\n  }\r\n\r\n  const logOut = () => {\r\n    fetch(`${baseUrl}/logout`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        token: localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === \"ok\") {\r\n          console.log(\"Logout Succesfully\");\r\n          window.localStorage.clear();\r\n          const signInPath = \"/sign-in\"; // Update this with your actual sign-in page path\r\n          const redirectURL = window.location.origin + signInPath;\r\n          window.location.href = redirectURL;\r\n        } else {\r\n          console.log(\"Logout error:\", data.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Logout error:\", error);\r\n      });\r\n  };\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container fluid>\r\n        <MDBNavbarBrand href=\"/\">\r\n          <img\r\n            src={AppLogo}\r\n            height=\"50\"\r\n            width=\"150\"\r\n            alt=\"\"\r\n            loading=\"lazy\"\r\n            style={{ borderRadius: \"10px\" }}\r\n          />\r\n        </MDBNavbarBrand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          >\r\n            <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n            <Nav.Link onClick={ViewAvailableTests}>Take Tests</Nav.Link>\r\n            <Nav.Link onClick={ViewTestResults}>View Results</Nav.Link>\r\n            {/* <Nav.Link href=\"/dashboard/getAllUsers\">Manage Users</Nav.Link> */}\r\n            \r\n          </Nav>\r\n          {/* <Form className=\"d-flex\">\r\n            <Form.Control\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            \r\n          </Form> */}\r\n          <Button onClick={logOut} variant=\"danger\">\r\n            LogOut\r\n          </Button>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default StudentTopbar;\r\n","import React , {useState} from 'react';\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport AdminTopNavBar from './Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes'\r\nimport StudentTopNavBar from './Topsidenavbar/dash-basicTop-bar-Students-Routes'\r\nimport TutorTopNavBar  from './Topsidenavbar/dash-basicTop-bar-Tutor-Routes';\r\nimport { MDBCol, MDBRow, MDBBtn } from \"mdb-react-ui-kit\";  \r\nimport { useEffect } from 'react';\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nconst baseUrl = require(\"../config\");\r\n\r\n\r\nexport default function EditProfile() {\r\n  const location = useLocation();\r\n  let navigate = useNavigate();\r\n  const userData = location.state.userData;\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  //const [phoneNumber, setphoneNumber] = (userData.phoneNumber)\r\n  const [email, setEmail] = useState(\"\");\r\n  //console.log(userData);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [retypeNewPassword, setRetypeNewPassword] = useState(\"\");\r\n  const [passwordMatchError, setPasswordMatchError] = useState(false);\r\n  const [Alert, setAlert] = useState(null);\r\n  const { id } = useParams();\r\n  const token = localStorage.getItem(\"token\");\r\n  const [phoneNumber,setPhoneNumber] = useState(\"\");\r\n  const userType = userData.userType;\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [education, setEducation] = useState(\"\");\r\n  const [changePassword, setChangePassword] = useState(false);\r\n  \r\n\r\nuseEffect(() => {\r\n  setFname(userData.fname);\r\n  setLname(userData.lname);\r\n  setEmail(userData.email);\r\n  setPhoneNumber(userData.phoneNumber);\r\n}, [userData])\r\n\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setNewPassword(e);\r\n    setPasswordMatchError(false);\r\n  };\r\n\r\n  const handleRetypePasswordChange = (e) => {\r\n    setRetypeNewPassword(e);\r\n    setPasswordMatchError(false);\r\n  };\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n\r\n  const checkCurrentPassword = (e) => {\r\n    e.preventDefault();\r\n     return fetch(`${baseUrl}/checkOldPassword/${email}/${oldPassword}`, {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n         Accept: \"application/json\",\r\n       },\r\n     })\r\n       .then((res) => res.json())\r\n       .then((data) => {\r\n         return data.status;\r\n       })\r\n       .catch((error) => {\r\n         //console.error(error);\r\n         throw error;\r\n       });\r\n  };\r\n\r\n  const handleUpdateProfile = (e) => {\r\n    e.preventDefault();\r\n\r\n     if (newPassword !== retypeNewPassword) {\r\n       setPasswordMatchError(true);\r\n       return;\r\n     }\r\n\r\n     const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\r\n    \r\n\r\n      const requestBody = {\r\n        fname,\r\n        lname,\r\n        phoneNumber,\r\n      };\r\n\r\n      if (changePassword && !newPassword) {\r\n        setAlert(\"Password should not be empty!\");\r\n        return;\r\n      }\r\n\r\n     if (changePassword && newPassword) {\r\n       \r\n       if (!regularExpression.test(newPassword)) {\r\n         setAlert(\r\n           \"Password should be between 6 to 16 characters and contain at least one digit and one special character.\"\r\n         );\r\n         return;\r\n       }      \r\n       requestBody.newPassword = newPassword;\r\n     }\r\n     console.log(newPassword);\r\n     //localStorage.removeItem(\"token\");\r\n     fetch(`${baseUrl}/updateProfile/${id}`, {\r\n       /* sending login-user API*/\r\n       method: \"POST\",\r\n       crossDomain: true,\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n         Accept: \"application/json\",\r\n         \"Access-Control-Allow-Origin\": \"*\",\r\n         Authorization: `Bearer ${token}`,\r\n       },\r\n       body: JSON.stringify(requestBody),\r\n     })\r\n       .then((res) => {\r\n         const authorizationHeader = res.headers.get(\"authorization\");\r\n         if (authorizationHeader) {\r\n           const newToken = authorizationHeader.split(\" \")[1];\r\n           localStorage.setItem(\"token\", newToken);\r\n         }\r\n         return res.json();\r\n       })\r\n       .then((data) => {\r\n         //console.log(data, \"userData\");\r\n\r\n         if (data.data === \"User Exists\") {\r\n           setAlert(\"First name exists, try different..\");\r\n         }\r\n         if (data.status === \"ok\") {\r\n          //  localStorage.setItem(\"token\", data.token);\r\n           localStorage.setItem(\r\n             \"updatedProfileData\",\r\n             JSON.stringify(data.data)\r\n           );\r\n\r\n           alert(\"Updated Successfully\");\r\n           navigate(\"/dashboard\");\r\n         } else {\r\n           setAlert(data.err);\r\n         }\r\n       });\r\n\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (changePassword) {\r\n      checkCurrentPassword(e)\r\n        .then((status) => {\r\n          if (status === \"ok\") {\r\n            handleUpdateProfile(e);\r\n          } else {\r\n            setAlert(\"Current password is incorrect.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          //console.error(error);\r\n          setAlert(\"An error occurred while checking the current password.\");\r\n        });\r\n    } else {\r\n      handleUpdateProfile(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userData.userType === \"Student\" ? (\r\n        <StudentTopNavBar userData={userData} />\r\n      ) : userData.userType === \"Admin\" ? (\r\n        <AdminTopNavBar />\r\n      ) : userData.userType === \"Tutor\" ? (\r\n        <TutorTopNavBar />\r\n      ) : null}\r\n      <div className=\"container rounded bg-white mt-5 mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 border-right\">\r\n            <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n              <span className=\"font-weight-bold\">Welcome {userType}</span>\r\n              <img\r\n                className=\"rounded-circle mt-5\"\r\n                width=\"150px\"\r\n                src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"\r\n                alt=\"Profile\"\r\n              />\r\n              <span className=\"font-weight-bold\">\r\n                {fname} {lname}\r\n              </span>\r\n              <span className=\"text-black-50\">{email}</span>\r\n              <span className=\"text-black-50\">{phoneNumber}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8 border-right\">\r\n            <div className=\"p-3 py-5\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <h4 className=\"text-right\">Profile Settings</h4>\r\n              </div>\r\n              <div className=\"row mt-2\">\r\n                <div className=\"col-md-6\">\r\n                  <label className=\"labels\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"First name\"\r\n                    value={fname}\r\n                    onChange={(e) => setFname(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label className=\"labels\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Last name\"\r\n                    value={lname}\r\n                    onChange={(e) => setLname(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"labels\">Phone Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                {userData.userType === \"Student\" && (\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\">Education</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={education}\r\n                      onChange={(e) => setEducation(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select educational level</option>\r\n                      <option value=\"Form 1\">Form 1</option>\r\n                      <option value=\"Form 2\">Form 2</option>\r\n                      <option value=\"Form 3\">Form 3</option>\r\n                      <option value=\"Form 4\">Form 4</option>\r\n                      <option value=\"Form 5\">Form 5</option>\r\n                    </select>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {changePassword && (\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\">Current Password</label>\r\n                    <div className=\"input-group mb-3\">\r\n                      <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Current Password\"\r\n                        value={oldPassword}\r\n                        onChange={(e) => setOldPassword(e.target.value)}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <button\r\n                          className=\"btn btn-tertiary\"\r\n                          type=\"button\"\r\n                          onClick={toggleShowPassword}\r\n                        >\r\n                          {showPassword ? <BsEyeSlash /> : <BsEye />}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"labels\">New Password</label>\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <button\r\n                          className=\"btn btn-tertiary\"\r\n                          type=\"button\"\r\n                          onClick={toggleShowPassword}\r\n                        >\r\n                          {showPassword ? <BsEyeSlash /> : <BsEye />}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"labels\">Retype New Password</label>\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Retype Password\"\r\n                        value={retypeNewPassword}\r\n                        onChange={(e) => setRetypeNewPassword(e.target.value)}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <button\r\n                          className=\"btn btn-tertiary\"\r\n                          type=\"button\"\r\n                          onClick={toggleShowPassword}\r\n                        >\r\n                          {showPassword ? <BsEyeSlash /> : <BsEye />}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <MDBBtn\r\n                className=\"btn btn-info mt-4 profile-button\"\r\n                type=\"button\"\r\n                onClick={() => setChangePassword(!changePassword)}\r\n              >\r\n                {changePassword ? \"Cancel\" : \"Change Password\"}\r\n              </MDBBtn>\r\n              {passwordMatchError && (\r\n                <div className=\"alert alert-danger mt-3\">\r\n                  Passwords do not match. Please retype them correctly.\r\n                </div>\r\n              )}\r\n              {Alert && <div className=\"alert alert-danger mt-3\">{Alert}</div>}\r\n              <div className=\"mt-5 text-center\">\r\n                <button\r\n                  className=\"btn btn-primary profile-button\"\r\n                  type=\"button\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Save Profile\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-md-4\">\r\n            <div className=\"p-3 py-5\">\r\n              <div className=\"d-flex justify-content-between align-items-center experience\">\r\n                <span>Edit Experience</span>\r\n                <span\r\n                  className=\"border px-3 p-1 add-experience\"\r\n                  onClick={handleAddExperience}\r\n                >\r\n                  <i className=\"fa fa-plus\"></i>&nbsp;Experience\r\n                </span>\r\n              </div>\r\n              <br />\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Experience in Designing</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Experience\"\r\n                  value={experience}\r\n                  onChange={(e) => setExperience(e.target.value)}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Additional Details</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Additional details\"\r\n                  value={additionalDetails}\r\n                  onChange={(e) => setAdditionalDetails(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TopDashbar from \"./Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst baseUrl = require(\"../config\");\r\n\r\nexport default function CreateUser() {\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"\");\r\n  let navigate = useNavigate();\r\n  \r\n  const handleSubmit = (e) => {\r\n    \r\n      e.preventDefault();\r\n    \r\n\r\n      console.log(fname, lname, email, password, userType);\r\n      fetch(`${baseUrl}/createUser`, {\r\n        method: \"POST\",\r\n        crossDomain: true,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          fname,\r\n          lname,\r\n          email,\r\n          password,\r\n          userType,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error !== \"User Exists\") {\r\n            console.log(data, \"userRegister\");\r\n            toast(\"User Created Successfully\", {\r\n              type: \"success\",\r\n              autoClose: 5000,\r\n            });\r\n             setTimeout(() => {\r\n              navigate('/dashboard');\r\n             }, 5000);\r\n          } else {\r\n            alert(data.error);\r\n          }\r\n        });\r\n      \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopDashbar />\r\n      {/* <AdminSidebar userData={userData} /> */}\r\n      <ToastContainer />\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n          <form onSubmit={handleSubmit}>\r\n            <h3>Create User</h3>\r\n            <div id=\"recaptcha-container\"></div>\r\n\r\n            <div>\r\n              Create user As:\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                name=\"UserType\"\r\n                value=\"Student\"\r\n                onChange={(e) => setUserType(e.target.value)}\r\n                required\r\n              />{\" \"}\r\n              Student{\" \"}\r\n              <input\r\n                type=\"radio\"\r\n                name=\"UserType\"\r\n                value=\"Tutor\"\r\n                onChange={(e) => setUserType(e.target.value)}\r\n                required\r\n              />{\" \"}\r\n              Tutor{\" \"}\r\n              <input\r\n                type=\"radio\"\r\n                name=\"UserType\"\r\n                value=\"Admin\"\r\n                onChange={(e) => setUserType(e.target.value)}\r\n                required\r\n              />{\" \"}\r\n              Admin{\" \"}\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div className=\"mb-3\">\r\n              <label>First name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"First name\"\r\n                onChange={(e) => setFname(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label>Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Last name\"\r\n                onChange={(e) => setLname(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label>Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-grid\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { BsPlusCircle, BsDashCircle } from \"react-icons/bs\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './Styles/createExamStyles.css';\r\nimport TopBar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { MdCenterFocusStrong } from './../../node_modules/react-icons/md/index.esm';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function CreateExamForm() {\r\n  const navigate = useNavigate();\r\n  let userId = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  userId = decodedToken.userId;\r\n  const [subjectName, setSubjectName] = useState('');\r\n  const [testName, setTestName] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [timeLimit, setTimeLimit] = useState('');\r\n  const [testPassword, settestPassword] = useState('');\r\n  const [questions, setQuestions] = useState([{ question: '', options: ['', '', '', ''], answer: '' }]);\r\n  console.log(userId);\r\n\r\n  const handleInputChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index][name] = value;\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleOptionChange = (event, index, optionIndex) => {\r\n    const { value } = event.target;\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index].options[optionIndex] = value;\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuestions([...questions, { question: '', options: ['', '', '', ''], answer: '' }]);\r\n  };\r\n\r\n  const handleDeleteQuestion = () => {\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions.pop();\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      !testName ||\r\n      !date ||\r\n      !timeLimit ||\r\n      questions.some(\r\n        (q) => !q.question || !q.answer || q.options.some((o) => !o)\r\n      )\r\n    ) {\r\n      alert(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      subject: { name: subjectName },\r\n      test: { name: testName, date, timeLimit, testPassword, questions },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${baseUrl}/createExam/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n     const json = await response.json();\r\n\r\n     if (\r\n       json.status === \"New Test Created\" ||\r\n       json.status === \"New Test and Subject Created\"\r\n     ) {\r\n       alert(json.status);\r\n       navigate(\"/dashboard\");\r\n     } else {\r\n       throw new Error(json.message);\r\n     }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error);\r\n      // Handle error case here\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <br />\r\n      <div className=\"createExam-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"createExam-inner\">\r\n          <div className=\"container\">\r\n            <h1>Create Exam</h1>\r\n            <br />\r\n            <Form onSubmit={handleSubmit} className=\"exam-form\">\r\n              <div className=\"form-group\">\r\n                <label>Subject Name</label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={subjectName}\r\n                  onChange={(event) => setSubjectName(event.target.value)}\r\n                >\r\n                  <option value=\"\">Select a subject</option>\r\n                  <option value=\"Bahasa Melayu\">Bahasa Melayu</option>\r\n                  <option value=\"English\">English</option>\r\n                  <option value=\"Math\">Math</option>\r\n                  <option value=\"Add Maths\">Add Maths</option>\r\n                  <option value=\"Science\">Science</option>\r\n                  <option value=\"Sejarah\">Sejarah</option>\r\n                  <option value=\"Biology\">Biology</option>\r\n                  <option value=\"Chemistry\">Chemistry</option>\r\n                  <option value=\"Physics\">Physics</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Test Name</label>\r\n                <MDBInput\r\n                  type=\"text\"\r\n                  value={testName}\r\n                  onChange={(event) => setTestName(event.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"date-time-group\">\r\n                  <label>Date</label>\r\n                  <MDBInput\r\n                    type=\"datetime-local\"\r\n                    value={date}\r\n                    onChange={(event) => setDate(event.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Time Limit (minutes)</label>\r\n                  <MDBInput\r\n                    type=\"number\"\r\n                    value={timeLimit}\r\n                    onChange={(event) => setTimeLimit(event.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Test Password</label>\r\n                  <MDBInput\r\n                    type=\"password\"\r\n                    value={testPassword}\r\n                    onChange={(event) => settestPassword(event.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {questions.map((question, index) => (\r\n                <div className=\"question-container\" key={index}>\r\n                  <h4>Question {index + 1}:</h4>\r\n                  <div className=\"form-group\">\r\n                    <label>Question</label>\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      name=\"question\"\r\n                      value={question.question}\r\n                      onChange={(event) => handleInputChange(event, index)}\r\n                    />\r\n                  </div>\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <div className=\"option\" key={optionIndex}>\r\n                      <div className=\"form-group\">\r\n                        <label>{`Option ${optionIndex + 1}`}</label>\r\n                        <MDBInput\r\n                          type=\"text\"\r\n                          value={option}\r\n                          onChange={(event) =>\r\n                            handleOptionChange(event, index, optionIndex)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {question.answer === option && (\r\n                        <FontAwesomeIcon\r\n                          icon={faCheckCircle}\r\n                          className=\"icon\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"form-group\">\r\n                    <label>Answer:</label>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      as=\"select\"\r\n                      value={question.answer}\r\n                      onChange={(event) => handleInputChange(event, index)}\r\n                      name=\"answer\"\r\n                    >\r\n                      {question.options.map((option, optionIndex) => (\r\n                        <option key={optionIndex} value={option}>\r\n                          {option}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"mb-3 add-question-btn\"\r\n                onClick={handleAddQuestion}\r\n              >\r\n                <BsPlusCircle className=\"me-2\" />\r\n                Add Question\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"mb-3 delete-question-btn\"\r\n                onClick={handleDeleteQuestion}\r\n              >\r\n                <BsDashCircle className=\"me-2\" />\r\n                Delete Question\r\n              </Button>\r\n              <br />\r\n              <MDBBtn color=\"primary\" type=\"submit\">\r\n                Create Exam\r\n              </MDBBtn>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n//  <form onSubmit={handleSubmit}>\r\n//       <label>\r\n//         Subject Name:\r\n//         <input\r\n//           type=\"text\"\r\n//           value={subjectName}\r\n//           onChange={(event) => setSubjectName(event.target.value)}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Test Name:\r\n//         <input\r\n//           type=\"text\"\r\n//           value={testName}\r\n//           onChange={(event) => setTestName(event.target.value)}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Date:\r\n//         <input\r\n//           type=\"datetime-local\"\r\n//           value={date}\r\n//           onChange={(event) => setDate(event.target.value)}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Time Limit (minutes):\r\n//         <input\r\n//           type=\"number\"\r\n//           value={timeLimit}\r\n//           onChange={(event) => setTimeLimit(event.target.value)}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       {questions.map((question, index) => (\r\n//         <div key={index}>\r\n//           <label>\r\n//             Question {index + 1}:\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"question\"\r\n//               value={question.question}\r\n//               onChange={(event) => handleInputChange(event, index)}\r\n//             />\r\n//           </label>\r\n//           <br />\r\n//           {question.options.map((option, optionIndex) => (\r\n//             <label key={optionIndex}>\r\n//               Option {optionIndex + 1}:\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={option}\r\n//                 onChange={(event) =>\r\n//                   handleOptionChange(event, index, optionIndex)\r\n//                 }\r\n//               />\r\n//             </label>\r\n//           ))}\r\n//           <br />\r\n//           <label>\r\n//             Answer:\r\n//             <select\r\n//               value={question.answer}\r\n//               onChange={(event) => handleInputChange(event, index)}\r\n//               name=\"answer\"\r\n//             >\r\n//               {question.options.map((option, optionIndex) => (\r\n//                 <option key={optionIndex} value={option}>\r\n//                   {option}\r\n//                 </option>\r\n//               ))}\r\n//         </select>\r\n//       </label>\r\n//       <br />\r\n//     </div>\r\n//   ))}\r\n//   <button type=\"button\" onClick={handleAddQuestion}>\r\n//     Add Question\r\n//   </button>\r\n//   <br />\r\n//   <br />\r\n//   <button type=\"submit\">Create Exam</button>\r\n// </form>","import React from 'react'\r\n\r\nexport default function ErrorPage() {\r\n  return (\r\n    <div>\r\n      Error!! This page not found..\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  faTrash,\r\n  faSquareArrowUpRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { MDBBtn } from \"mdb-react-ui-kit\";\r\nimport Topbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\"\r\nconst baseUrl = require(\"../config\");\r\nexport default function ViewSubject() {\r\n  const [data, setData] = useState([]);\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getAllSubject();\r\n  }, []);\r\n\r\n  const getAllSubject = () => {\r\n    fetch(`${baseUrl}/subjects`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"Subjects\");\r\n        setData(data.data);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const deleteSubject = (id, name) => {\r\n    if (\r\n      window.confirm(`Please Click Ok if you want to delete subject ${name}`)\r\n    ) {\r\n      fetch(`${baseUrl}/deleteSubject`, {\r\n        method: \"DELETE\",\r\n        crossDomain: true,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          subjectid: id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          alert(data.message);\r\n          getAllSubject();\r\n          console.log(data);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Topbar /><br />\r\n      <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n          <h3>All Subjects:</h3>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Subject Name</th>\r\n                <th>View Test</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((i) => (\r\n                <tr key={i._id}>\r\n                  <td>{i.name}</td>\r\n                  <td>\r\n                    <MDBBtn\r\n                      onClick={() => {\r\n                        navigate(`/subjects/${i.name}/tests`);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={faSquareArrowUpRight}\r\n                        className=\"me-2\"\r\n                      />\r\n                      View Test\r\n                    </MDBBtn>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => deleteSubject(i._id, i.name)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} className=\"me-2\" />\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport {\r\n  faTrash,\r\n  faSquareArrowUpRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBBtn } from \"mdb-react-ui-kit\";\r\nimport Topbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function ViewTest() {\r\n  const [data, setData] = useState([]);\r\n  const { subject } = useParams();\r\n  let navigate = useNavigate();\r\n\r\n\r\n     useEffect(() => {\r\n       getAllTest();\r\n     }, []);\r\n\r\n    \r\n  const getAllTest = () => {\r\n    fetch(`${baseUrl}/subjects/${subject}/tests`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status === \"ok\") {\r\n          setData(data.data);\r\n          console.log(data.data);\r\n        } else {\r\n          console.log(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const deleteTest = (id, name) => {\r\n    if (\r\n      window.confirm(`Please click OK if you want to delete subject ${name}`)\r\n    ) {\r\n      fetch(`${baseUrl}/deleteTest/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          alert(data.message);\r\n          getAllTest();\r\n          console.log(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting test:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const isTestAvailable = (availableUntil) => {\r\n    const currentDate = new Date();\r\n    const availableUntilDate = new Date(availableUntil);\r\n    return availableUntilDate > currentDate ? (\r\n      <button type=\"button\" class=\"btn btn-success btn-rounded\">\r\n        Available\r\n      </button>\r\n    ) : (\r\n      <button type=\"button\" class=\"btn btn-warning btn-rounded\">\r\n        Unavailable\r\n      </button>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <br />\r\n      <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n          <h3>All Tests:</h3>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Test Name</th>\r\n                <th>Created By</th>\r\n                <th>Date Created(MM/DD/YY)</th>\r\n                <th>Available Until(MM/DD/YY)</th>\r\n                <th>Status</th>\r\n                <th>View Questions</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((test) => (\r\n                <tr key={test._id}>\r\n                  <td>{test.name}</td>\r\n                  <td>{test.createdBy}</td>\r\n                  <td>{new Date(test.createdAt).toLocaleString()}</td>\r\n                  <td>{new Date(test.date).toLocaleString()}</td>\r\n                  <td>{isTestAvailable(test.date)}</td>\r\n                  <td>\r\n                    <MDBBtn\r\n                      onClick={() => {\r\n                        navigate(`/subjects/${subject}/tests/${test._id}`);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={faSquareArrowUpRight}\r\n                        className=\"me-2\"\r\n                      />\r\n                      View Questions\r\n                    </MDBBtn>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => deleteTest(test._id, test.name)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} className=\"me-2\" />\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Table,Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { BiRadioCircleMarked } from \"react-icons/bi\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AdminTopbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nimport TutorTopbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nimport './Styles/tutorViewQuestions.css'\r\nimport { AlignMiddle } from \"react-bootstrap-icons\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function ViewQuestions() {\r\n  const [data, setData] = useState([]);\r\n  const { subject, testid } = useParams();\r\n  const navigate = useNavigate();\r\n  let userType = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  userType = decodedToken.userType;\r\n  console.log(userType);\r\n\r\n  const handleNavigate = (data) => {\r\n    navigate(`/subjects/${data.name}/editQuestions/${data.id}`, {\r\n      state: {\r\n        data : data,\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`${baseUrl}/subjects/${subject}/tests/${testid}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status === \"ok\") {\r\n          setData(data.data);\r\n          console.log(data);\r\n        } else {\r\n          console.log(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [subject,testid]);\r\n\r\n  return (\r\n    <div>\r\n      {userType === \"Admin\" ? <AdminTopbar /> : <TutorTopbar />}\r\n      <br />\r\n      <div className=\"display-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"display-inner\">\r\n          <h3 className=\"align-middle\">All Questions:</h3>\r\n          <br />\r\n          <h4>Test Name: {data.name}</h4>\r\n          <h4>Date: {data.date && data.date.substring(0, 10)} </h4>\r\n          <h4>Time: {data.date && data.date.substring(11, 16)} Hrs</h4>\r\n          <h4>Time Limit: {data.timeLimit} Minutes</h4>\r\n          <br />\r\n          {data.questions ? (\r\n            <Table bordered hover responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Question</th>\r\n                  <th>Options</th>\r\n                  <th>Answer</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.questions.map((question, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{question.question}</td>\r\n                    <td>\r\n                      {question.options.map((option, optionIndex) => (\r\n                        <div key={optionIndex} className=\"option\">\r\n                          <BiRadioCircleMarked className=\"radio-icon\" />\r\n                          {option}\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                    <td>\r\n                      {question.options.indexOf(question.answer) !== -1 ? (\r\n                        <FontAwesomeIcon\r\n                          icon={faCheckCircle}\r\n                          className=\"text-success answer-icon\"\r\n                        />\r\n                      ) : (\r\n                        <FontAwesomeIcon\r\n                          icon={faTimesCircle}\r\n                          className=\"text-danger answer-icon\"\r\n                        />\r\n                      )}\r\n                      {question.answer}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              {userType !== \"Admin\" ? (\r\n                <Button onClick={() => handleNavigate(data)}>\r\n                  Edit Questions\r\n                </Button>\r\n              ) : null}\r\n            </Table>\r\n          ) : (\r\n            <p>No questions found.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { BsPlusCircle, BsDashCircle } from \"react-icons/bs\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Styles/createExamStyles.css\";\r\nimport TopBar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nimport { MdCenterFocusStrong } from \"react-icons/md/index.esm\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nconst baseUrl = require(\"../config\");\r\n\r\nexport default function EditQuestions() {\r\n  const navigate=useNavigate();\r\n  const location = useLocation();\r\n  const data = location.state.data;\r\n  const { testname , testid }= useParams();\r\n  console.log(testname, testid)\r\n  console.log(data.id); \r\n\r\n  console.log(data.questions[0].question); \r\n  console.log(data.questions[1].answer); \r\n\r\n    const [testName, setTestName] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [timeLimit, setTimeLimit] = useState(0);\r\n    const [questions, setQuestions] = useState([\r\n      { question: \"\", options: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n      setTestName(data.name);\r\n      setDate(formatDate(data.date));\r\n      setTimeLimit(data.timeLimit);\r\n      setQuestions(data.questions);\r\n    }, [data]);\r\n\r\n    const formatDate = (dateString) => {\r\n      const date = new Date(dateString);\r\n      const formattedDate = date.toISOString().slice(0, 16);\r\n      return formattedDate;\r\n    };\r\n  \r\n\r\n    const handleInputChange = (event, index) => {\r\n      const { name, value } = event.target;\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions[index][name] = value;\r\n      setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const handleOptionChange = (event, index, optionIndex) => {\r\n      const { value } = event.target;\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions[index].options[optionIndex] = value;\r\n      setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const handleAddQuestion = () => {\r\n      setQuestions([\r\n        ...questions,\r\n        { question: \"\", options: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      ]);\r\n    };\r\n\r\n    const handleDeleteQuestion = () => {\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions.pop();\r\n      setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (\r\n        !testName ||\r\n        !date ||\r\n        !timeLimit ||\r\n        questions.some(\r\n          (q) => !q.question || !q.answer || q.options.some((o) => !o)\r\n        )\r\n      ) {\r\n        alert(\"Please fill in all required fields.\");\r\n        return;\r\n      }\r\n      \r\n      const updatedData = {\r\n        test: {\r\n          name: testName,\r\n          date: date,\r\n          timeLimit: timeLimit,\r\n          questions: questions,\r\n        },\r\n      };\r\n      console.log(updatedData);\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `${baseUrl}/updateQuestions/${testname}/${testid}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n            body: JSON.stringify(updatedData),\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(data);\r\n          alert(data.status);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          console.error(\"Error:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n \r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <br />\r\n      <div className=\"createExam-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"createExam-inner\">\r\n          <div className=\"container\">\r\n            <h1>Edit Test</h1>\r\n            <br />\r\n            <Form onSubmit={handleSubmit} className=\"exam-form\">\r\n              {/* <div className=\"form-group\">\r\n                  <label>Subject Name</label>\r\n                <MDBInput\r\n                  type=\"text\"\r\n                  value={subjectName}\r\n                  onChange={(event) => setSubjectName(event.target.value)}\r\n                />\r\n              </div> */}\r\n              <div className=\"form-group\">\r\n                <label>Test Name</label>\r\n                <MDBInput\r\n                  type=\"text\"\r\n                  value={testName}\r\n                  onChange={(event) => setTestName(event.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"date-time-group\">\r\n                  <label>Date</label>\r\n                  <MDBInput\r\n                    type=\"datetime-local\"\r\n                    value={date}\r\n                    onChange={(event) => setDate(event.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Time Limit (minutes)</label>\r\n                  <MDBInput\r\n                    type=\"number\"\r\n                    value={timeLimit}\r\n                    onChange={(event) => setTimeLimit(event.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {questions.map((question, index) => (\r\n                <div className=\"question-container\" key={index}>\r\n                  <h4>Question {index + 1}:</h4>\r\n                  <div className=\"form-group\">\r\n                    <label>Question</label>\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      name=\"question\"\r\n                      value={question.question}\r\n                      onChange={(event) => handleInputChange(event, index)}\r\n                    />\r\n                  </div>\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <div className=\"option\" key={optionIndex}>\r\n                      <div className=\"form-group\">\r\n                        <label>{`Option ${optionIndex + 1}`}</label>\r\n                        <MDBInput\r\n                          type=\"text\"\r\n                          value={option}\r\n                          onChange={(event) =>\r\n                            handleOptionChange(event, index, optionIndex)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {question.answer === option && (\r\n                        <FontAwesomeIcon\r\n                          icon={faCheckCircle}\r\n                          className=\"icon\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"form-group\">\r\n                    <label>Answer:</label>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      as=\"select\"\r\n                      value={question.answer}\r\n                      onChange={(event) => handleInputChange(event, index)}\r\n                      name=\"answer\"\r\n                    >\r\n                      {question.options.map((option, optionIndex) => (\r\n                        <option key={optionIndex} value={option}>\r\n                          {option}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"mb-3 add-question-btn\"\r\n                onClick={handleAddQuestion}\r\n              >\r\n                <BsPlusCircle className=\"me-2\" />\r\n                Add Question\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"mb-3 delete-question-btn\"\r\n                onClick={handleDeleteQuestion}\r\n              >\r\n                <BsDashCircle className=\"me-2\" />\r\n                Delete Question\r\n              </Button>\r\n              <br />\r\n              <MDBBtn color=\"primary\" type=\"submit\">\r\n                Update\r\n              </MDBBtn>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MDBTable,\r\n  MDBTableHead,\r\n  MDBTableBody,\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBRow,\r\n} from \"mdb-react-ui-kit\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Topbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function viewResultsSubjectTest() {\r\n  const [data, setData] = useState([]);\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    viewTest();\r\n  }, []);\r\n\r\n  const viewTest = async () => {\r\n    fetch(`${baseUrl}/getSubjectAndTestNames`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        setData(data.data);\r\n        setSelectedSubject(data.data[0].subject); // Set the first subject as the initially selected subject\r\n      });\r\n  };\r\n\r\n  const handleSelectSubject = (subject) => {\r\n    setSelectedSubject(subject);\r\n  };\r\n\r\n    const handleNavigateTOviewResults = (subject,testId) => {\r\n      console.log(subject,testId);\r\n       navigate(`/dashboard/viewResultsTestsLists/${subject}/${testId}`);\r\n    };\r\n\r\nconst handleDownloadTest = async (subjectName, testName) => {\r\n  try {\r\n\r\n\r\n    const response = await fetch(\r\n      `${baseUrl}/downloadResults/${subjectName}/${testName}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (response.ok) {\r\n      const blob = await response.blob();\r\n\r\n      // Extract the filename from the response headers\r\n      const contentDispositionHeader = response.headers.get(\r\n        \"Content-Disposition\"\r\n      );\r\n      const filename = contentDispositionHeader\r\n        ? contentDispositionHeader.split(\"filename=\")[1]\r\n        : \"result.csv\";\r\n\r\n      // Create a temporary anchor element\r\n      const link = document.createElement(\"a\");\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = filename;\r\n\r\n      // Simulate a click on the anchor element to start the download\r\n      link.click();\r\n\r\n      // Clean up\r\n      link.remove();\r\n\r\n      alert(\"Result downloaded successfully\");\r\n    } else {\r\n      throw new Error(\"Failed to download the results\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert(\"Error occurred while downloading the results\");\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <br />\r\n      <div>\r\n        <MDBRow className=\"g-2\">\r\n          <MDBCol size=\"2\"></MDBCol>\r\n          <MDBCol size=\"8\">\r\n            <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n              <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n                <div>\r\n                  <h3>List Of Tests</h3>\r\n\r\n                  <Nav\r\n                    variant=\"tabs\"\r\n                    activeKey={selectedSubject}\r\n                    onSelect={handleSelectSubject}\r\n                  >\r\n                    {data.map((subject, index) => (\r\n                      <Nav.Item key={index}>\r\n                        <Nav.Link eventKey={subject.subject}>\r\n                          {subject.subject} Tests\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    ))}\r\n                  </Nav>\r\n                </div>\r\n                <div>\r\n                  {data.map((subject) => {\r\n                    if (subject.subject === selectedSubject) {\r\n                      return (\r\n                        <MDBTable striped>\r\n                          <MDBTableHead dark>\r\n                            <tr>\r\n                              <th scope=\"col\">#</th>\r\n                              <th scope=\"col\">Test Name</th>\r\n                              <th scope=\"col\">View Student Results</th>\r\n                              <th scope=\"col\">Download</th>\r\n                            </tr>\r\n                          </MDBTableHead>\r\n                          <MDBTableBody>\r\n                            {subject.tests.map((test, index) => (\r\n                              <tr key={index}>\r\n                                <th scope=\"row\">{index + 1}</th>\r\n                                <td>{test.testName}</td>\r\n                                <td>\r\n                                  <MDBBtn\r\n                                    style={{ width: \"80px\" }}\r\n                                    color=\"primary\"\r\n                                    onClick={() =>\r\n                                      handleNavigateTOviewResults(\r\n                                        subject.subject,\r\n                                        test.testId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    View Results\r\n                                  </MDBBtn>\r\n                                </td>\r\n                                <td>\r\n                                  <MDBBtn\r\n                                    style={{ width: \"120px\" }}\r\n                                    color=\"success\"\r\n                                    onClick={() =>\r\n                                      handleDownloadTest(\r\n                                        subject.subject,\r\n                                        test.testName\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    Download\r\n                                  </MDBBtn>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </MDBTableBody>\r\n                        </MDBTable>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MDBCol, MDBRow, MDBBtn } from \"mdb-react-ui-kit\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { MDBTable, MDBTableHead, MDBTableBody } from \"mdb-react-ui-kit\";\r\nimport { faAlignCenter } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from \"mdb-react-ui-kit\";\r\nimport TutorTopBar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function AdminViewResultsSubjectAndTest() {\r\n  let { subject, testId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [score, setScore] = useState(null);\r\n  const [resultsID, setResultsID] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n  const [testName, setTestName] = useState(\"\");\r\n  const [alertModal, setAlertModal] = useState(false);\r\n\r\n  const viewAllStudentResults = () => {\r\n    fetch(`${baseUrl}/getResults/${subject}/${testId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error === \"No results found\") {\r\n          setAlertModal(true);\r\n        } else {\r\n          setData(data.data);\r\n          setTestName(data.data.testName[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    viewAllStudentResults();\r\n  }, [subject, testId, navigate]);\r\n\r\n  const toggleAlertModal = () => {\r\n    setAlertModal(false);\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setScore(null);\r\n    setResultsID(null);\r\n    setUsername(null);\r\n  };\r\n\r\n  const handleShow = (result) => {\r\n    setScore(result.percentageScore);\r\n    setResultsID(result._id);\r\n    setUsername(result.username);\r\n    setShow(true);\r\n  };\r\n\r\n  const handleEditScore = async () => {\r\n    editScore(score, resultsID);\r\n  };\r\n\r\n\r\n  const editScore = async (score, selectedResultID) => {\r\n    console.log(score, selectedResultID);\r\n    fetch(`${baseUrl}/editStudentScore/${selectedResultID}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        score: score,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        viewAllStudentResults();\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const deleteResult = async (selectedResultID) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${baseUrl}/deleteStudentResult/${selectedResultID}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.text();\r\n      console.log(data);\r\n      viewAllStudentResults();\r\n      alert(\"Result deleted successfully\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"An error occurred while deleting the result.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TutorTopBar />\r\n      <br />\r\n      <div>\r\n        <MDBModal\r\n          animation\r\n          show={alertModal}\r\n          tabIndex=\"-1\"\r\n          onHide={toggleAlertModal}\r\n        >\r\n          <MDBModalDialog position=\"top-right\" side>\r\n            <MDBModalContent>\r\n              <MDBModalHeader className=\"bg-danger text-white\">\r\n                <MDBModalTitle>Alert</MDBModalTitle>\r\n              </MDBModalHeader>\r\n              <MDBModalBody>\r\n                <p>No student has taken the test</p>\r\n              </MDBModalBody>\r\n              <MDBModalFooter>\r\n                <MDBBtn color=\"danger\" onClick={toggleAlertModal}>\r\n                  Close\r\n                </MDBBtn>\r\n              </MDBModalFooter>\r\n            </MDBModalContent>\r\n          </MDBModalDialog>\r\n        </MDBModal>\r\n        <MDBRow className=\"g-2\">\r\n          <MDBCol md=\"12\" lg=\"12\">\r\n            <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n              <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n                <div>\r\n                  <h3>{testName} Results</h3>\r\n                </div>\r\n                <div>\r\n                  <MDBTable striped>\r\n                    <MDBTableHead dark>\r\n                      <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Score</th>\r\n                        <th scope=\"col\">Percentage Score</th>\r\n                        <th scope=\"col\">Date/Time</th>\r\n                        <th scope=\"col\">Grade</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                      </tr>\r\n                    </MDBTableHead>\r\n                    <MDBTableBody>\r\n                      {data.map((result, index) => (\r\n                        <tr key={index}>\r\n                          <th scope=\"row\">{index + 1}</th>\r\n                          <td>{result.username}</td>\r\n                          <td>{`${result.score}/${result.totalQuestions}`}</td>\r\n                          <td>{result.percentageScore.toFixed(2)}%</td>\r\n                          <td>\r\n                            {new Date(result.date).toLocaleDateString()}\r\n                            <br /> {new Date(result.date).toLocaleTimeString()}\r\n                          </td>\r\n                          <td>\r\n                            {result.percentageScore >= 40 ? (\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-pass disabled\"\r\n                              >\r\n                                <strong>Pass</strong>\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-fail disabled\"\r\n                              >\r\n                                <strong>Fail</strong>\r\n                              </button>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <MDBBtn\r\n                              style={{ width: \"80px\" }}\r\n                              color=\"warning\"\r\n                              margin=\"100px\"\r\n                              onClick={() => handleShow(result)}\r\n                            >\r\n                              Edit\r\n                            </MDBBtn>\r\n                            <Modal\r\n                              show={show}\r\n                              onHide={handleClose}\r\n                              animation={true}\r\n                            >\r\n                              <Modal.Header closeButton>\r\n                                <Modal.Title>\r\n                                  Edit Score for {username}\r\n                                </Modal.Title>\r\n                              </Modal.Header>\r\n                              <Modal.Body>\r\n                                <Form>\r\n                                  <Form.Group\r\n                                    className=\"mb-3\"\r\n                                    controlId=\"exampleForm.ControlInput1\"\r\n                                  >\r\n                                    <Form.Label>Score</Form.Label>\r\n                                    <Form.Control\r\n                                      type=\"number\"\r\n                                      placeholder=\"New Score\"\r\n                                      value={score}\r\n                                      onChange={(e) => setScore(e.target.value)}\r\n                                      autoFocus\r\n                                    />\r\n                                  </Form.Group>\r\n                                </Form>\r\n                              </Modal.Body>\r\n                              <Modal.Footer>\r\n                                <Button\r\n                                  variant=\"secondary\"\r\n                                  onClick={handleClose}\r\n                                >\r\n                                  Close\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"primary\"\r\n                                  onClick={handleEditScore}\r\n                                >\r\n                                  Save Changes\r\n                                </Button>\r\n                              </Modal.Footer>\r\n                            </Modal>\r\n                            <MDBBtn\r\n                              style={{ width: \"80px\" }}\r\n                              color=\"danger\"\r\n                              onClick={() => deleteResult(result._id)}\r\n                            >\r\n                              Delete\r\n                            </MDBBtn>{\" \"}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </MDBTableBody>\r\n                  </MDBTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ViewSubject from \"./../Exam/viewSubjects\";\r\nimport {\r\n  faCheck,\r\n  faPersonCircleXmark,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AdminTopBar from \"./Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nimport \"./dashboard.css\";\r\nimport { MDBListGroup, MDBListGroupItem } from \"mdb-react-ui-kit\";\r\nimport {\r\n  MDBIcon,\r\n  MDBCollapse,\r\n  MDBRipple,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBBtn,\r\n} from \"mdb-react-ui-kit\";\r\nimport Footer from \"../Components/Footer\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport LoginLogoutActivity from \"../Components/Login-Logout-Activity\";\r\nimport UpComingTestCalender from \"../Components/upComingTestCalender\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function adminUserApproval() {\r\n    const [data, setData] = useState([]);\r\n\r\n    const getAllPendingUsers = () => {\r\n      fetch(`${baseUrl}/getAllPendingUsers`, {\r\n        method: \"POST\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data, \"allPendingUsers\");\r\n          setData(data.data);\r\n        });\r\n    };\r\n\r\n    const verifyUser = async (id, name, email) => {\r\n      if (\r\n        window.confirm(`Please Click Ok if you want to Verify user ${name}`)\r\n      ) {\r\n        const res = await fetch(`${baseUrl}/verifyUser`, {\r\n          method: \"POST\",\r\n          crossDomain: true,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n          body: JSON.stringify({\r\n            userid: id,\r\n            email: email,\r\n          }),\r\n        });\r\n        const data = await res.json();\r\n        alert(data.message);\r\n        getAllPendingUsers();\r\n      } else {\r\n        alert(\"There was error to verify the user.\");\r\n      }\r\n    };\r\n\r\n     const rejectUser = (id, name) => {\r\n       if (\r\n         window.confirm(\r\n           `Please Click Ok if you want to reject this user ${name}. This user details will be deleted`\r\n         )\r\n       ) {\r\n         fetch(`${baseUrl}/deleteUser`, {\r\n           method: \"DELETE\",\r\n           crossDomain: true,\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n             Accept: \"application/json\",\r\n             \"Access-Control-Allow-Origin\": \"*\",\r\n           },\r\n           body: JSON.stringify({\r\n             userid: id,\r\n           }),\r\n         })\r\n           .then((res) => res.json())\r\n           .then((data) => {\r\n             alert(data.data);\r\n             getAllPendingUsers();\r\n           });\r\n       } else {\r\n       }\r\n     };\r\n\r\n     useEffect(() => {\r\n       getAllPendingUsers();\r\n     }, []);\r\n   \r\n  return (\r\n    <>\r\n      <AdminTopBar />\r\n      <br />\r\n      <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"auth-inner\" style={{ width: 1024 }}>\r\n          <h3>User Approval Status</h3>\r\n          {data.length === 0 ? (\r\n            <div className=\"alert alert-danger mt-3\">\r\n             No users has requested to Register this system.\r\n            </div>\r\n          ) : (\r\n            <Table bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>User Type</th>\r\n                  <th>Status</th>\r\n                  <th>Verify</th>\r\n                  <th>Reject</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((i, index) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <td>{index + 1}</td>\r\n                      <td>\r\n                        {i.fname} {i.lname}\r\n                      </td>\r\n                      <td>{i.email}</td>\r\n                      <td>{i.userType}</td>\r\n                      <td>{i.status}</td>\r\n                      <td>\r\n                        <FontAwesomeIcon\r\n                          type=\"button\"\r\n                          class=\"btn btn-success common-btn\"\r\n                          icon={faCheck}\r\n                          onClick={() => verifyUser(i._id, i.fname, i.email)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <FontAwesomeIcon\r\n                          type=\"button\"\r\n                          class=\"btn btn-danger common-btn\"\r\n                          icon={faPersonCircleXmark}\r\n                          onClick={() => rejectUser(i._id, i.fname)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Table, Nav, Button } from \"react-bootstrap\";\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTable,\r\n  MDBTableHead,\r\n  MDBTableBody,\r\n  MDBBtn,\r\n} from \"mdb-react-ui-kit\";\r\nimport {\r\n  faTrash,\r\n  faSquareArrowUpRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport TutorTopbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function TutorViewSubjects() {\r\n  const [data, setData] = useState([]);\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAllSubjects();\r\n  }, []);\r\n\r\n  const getAllSubjects = () => {\r\n    fetch(`${baseUrl}/subjects/${id}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"Subjects\");\r\n        if (data.data && data.data.length > 0) {\r\n          setData(data.data);\r\n          setSelectedSubject(data.data[0].name);\r\n        }\r\n        if (data.data.length <= 0) {\r\n          setError(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error retrieving subjects:\", error);\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  const handleSelectSubject = (subject) => {\r\n    setSelectedSubject(subject);\r\n  };\r\n\r\n  const handleNavigateToViewQuestions = (subject, testId) => {\r\n    navigate(`/subjects/${subject}/tests/${testId}`);\r\n  };\r\n\r\n\r\n\r\n  const deleteTest = (id, name) => {\r\n    if (\r\n      window.confirm(`Please click OK if you want to delete subject ${name}`)\r\n    ) {\r\n      fetch(`${baseUrl}/deleteTest/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          alert(data.message);\r\n          getAllSubjects();\r\n          console.log(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting test:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const isTestAvailable = (availableUntil) => {\r\n    const currentDate = new Date();\r\n    const availableUntilDate = new Date(availableUntil);\r\n    return availableUntilDate > currentDate ? (\r\n      <button type=\"button\" class=\"btn btn-success btn-rounded\">\r\n        Test Active\r\n      </button>\r\n    ) : (\r\n      <button type=\"button\" class=\"btn btn-warning btn-rounded\">\r\n        Test is due\r\n      </button>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <TutorTopbar />\r\n      <br />\r\n      <MDBRow className=\"g-2\">\r\n        <MDBCol size=\"2\"></MDBCol>\r\n        <MDBCol size=\"8\">\r\n          <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n            <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n              <div>\r\n                <h3>List Of Subjects and Tests you handle</h3>\r\n                {error ? (\r\n                  <div className=\"alert alert-danger mt-3\">\r\n                    No subjects available. Create one test to view your test\r\n                    based on subject you handle.\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <Nav\r\n                      variant=\"tabs\"\r\n                      activeKey={selectedSubject}\r\n                      onSelect={handleSelectSubject}\r\n                    >\r\n                      {data.map((subject) => (\r\n                        <Nav.Item key={subject._id}>\r\n                          <Nav.Link eventKey={subject.name}>\r\n                            {subject.name} Tests\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      ))}\r\n                    </Nav>\r\n                    {selectedSubject && (\r\n                      <MDBTable striped>\r\n                        <MDBTableHead dark>\r\n                          <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Test Name</th>\r\n                            <th scope=\"col\">Created By</th>\r\n                            <th scope=\"col\">Date Created(MM/DD/YY)</th>\r\n                            <th scope=\"col\">Available Until(MM/DD/YY)</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\">View Questions</th>\r\n                            <th scope=\"col\">Delete Test</th>\r\n                          </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                          {data.map((subject) => {\r\n                            if (subject.name === selectedSubject) {\r\n                              return subject.tests.map((test, index) => (\r\n                                <tr key={test._id}>\r\n                                  <th scope=\"row\">{index + 1}</th>\r\n                                  <td>{test.name}</td>\r\n                                  <td>{test.createdBy}</td>\r\n                                  <td>\r\n                                    {new Date(test.createdAt).toLocaleString()}\r\n                                  </td>\r\n                                  <td>\r\n                                    {new Date(test.date).toLocaleString()}\r\n                                  </td>\r\n                                  <td>{isTestAvailable(test.date)}</td>\r\n                                  <td>\r\n                                    <MDBBtn\r\n                                      style={{ width: \"120px\" }}\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        handleNavigateToViewQuestions(\r\n                                          subject.name,\r\n                                          test._id\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      View Questions\r\n                                    </MDBBtn>\r\n                                  </td>\r\n                                  <td>\r\n                                    <Button\r\n                                      variant=\"danger\"\r\n                                      onClick={() =>\r\n                                        deleteTest(test._id, test.name)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon\r\n                                        icon={faTrash}\r\n                                        className=\"me-2\"\r\n                                      />\r\n                                      Delete\r\n                                    </Button>\r\n                                  </td>\r\n                                </tr>\r\n                              ));\r\n                            }\r\n                            return null;\r\n                          })}\r\n                        </MDBTableBody>\r\n                      </MDBTable>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MDBTable,\r\n  MDBTableHead,\r\n  MDBTableBody,\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBRow,\r\n} from \"mdb-react-ui-kit\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport TutorTopbar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function tutorViewResultsSubjectTest() {\r\n  let userId = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  userId = decodedToken.userId;\r\n  const [data, setData] = useState([]);\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  let navigate = useNavigate();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    viewTest();\r\n  }, []);\r\n\r\n  const viewTest = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${baseUrl}/getSubjectAndTestNames/${userId}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(data.data);\r\n      if (data.data && data.data.length > 0) {\r\n        setData(data.data);\r\n        setSelectedSubject(data.data[0].subject); // Set the first subject as the initially selected subject\r\n      }\r\n       if (data.data.length <= 0) {\r\n         setError(true);\r\n       }\r\n       else{\r\n        console.error(error);\r\n        //setError(true);\r\n       }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(true);\r\n      // Handle the error here, such as showing an error message to the user\r\n    }\r\n  };\r\n\r\n  const handleSelectSubject = (subject) => {\r\n    setSelectedSubject(subject);\r\n  };\r\n\r\n  const handleNavigateTOviewResults = (subject, testId) => {\r\n    console.log(subject, testId);\r\n    navigate(`/dashboard/viewResultsTestsLists/${subject}/${testId}`);\r\n  };\r\n\r\n  const handleDownloadTest = async (subjectName, testName) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${baseUrl}/downloadResults/${subjectName}/${testName}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n\r\n        // Extract the filename from the response headers\r\n        const contentDispositionHeader = response.headers.get(\r\n          \"Content-Disposition\"\r\n        );\r\n        const filename = contentDispositionHeader\r\n          ? contentDispositionHeader.split(\"filename=\")[1]\r\n          : \"result.csv\";\r\n\r\n        // Create a temporary anchor element\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(blob);\r\n        link.download = filename;\r\n\r\n        // Simulate a click on the anchor element to start the download\r\n        link.click();\r\n\r\n        // Clean up\r\n        link.remove();\r\n\r\n        alert(\"Result downloaded successfully\");\r\n      } else {\r\n        throw new Error(\"Failed to download the results\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error occurred while downloading the results\");\r\n    }\r\n  };\r\n\r\n return (\r\n   <>\r\n     <TutorTopbar />\r\n     <br />\r\n     <div>\r\n       <MDBRow className=\"g-2\">\r\n         <MDBCol size=\"2\"></MDBCol>\r\n         <MDBCol size=\"8\">\r\n           <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n             <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n               <div>\r\n                 <h3>List Of Tests</h3>\r\n                 {error ? (\r\n                   <div className=\"alert alert-danger mt-3\">\r\n                     No Students has taken Test yet.\r\n                   </div>\r\n                 ) : (\r\n                   <Nav\r\n                     variant=\"tabs\"\r\n                     activeKey={selectedSubject}\r\n                     onSelect={handleSelectSubject}\r\n                   >\r\n                     {data.map((subject, index) => (\r\n                       <Nav.Item key={index}>\r\n                         <Nav.Link eventKey={subject.subject}>\r\n                           {subject.subject} Tests\r\n                         </Nav.Link>\r\n                       </Nav.Item>\r\n                     ))}\r\n                   </Nav>\r\n                 )}\r\n               </div>\r\n               <div>\r\n                 {data.map((subject) => {\r\n                   if (subject.subject === selectedSubject) {\r\n                     return (\r\n                       <MDBTable striped>\r\n                         <MDBTableHead dark>\r\n                           <tr>\r\n                             <th scope=\"col\">#</th>\r\n                             <th scope=\"col\">Test Name</th>\r\n                             <th scope=\"col\">Actions</th>\r\n                           </tr>\r\n                         </MDBTableHead>\r\n                         <MDBTableBody>\r\n                           {subject.tests.map((test, index) => (\r\n                             <tr key={index}>\r\n                               <th scope=\"row\">{index + 1}</th>\r\n                               <td>{test.testName}</td>\r\n                               <td>\r\n                                 <MDBBtn\r\n                                   style={{\r\n                                     width: \"80px\",\r\n                                     marginRight: \"10px\",\r\n                                   }}\r\n                                   color=\"primary\"\r\n                                   onClick={() =>\r\n                                     handleNavigateTOviewResults(\r\n                                       subject.subject,\r\n                                       test.testId\r\n                                     )\r\n                                   }\r\n                                 >\r\n                                   View Results\r\n                                 </MDBBtn>\r\n                                 <MDBBtn\r\n                                   style={{ width: \"120px\" }}\r\n                                   color=\"success\"\r\n                                   onClick={() =>\r\n                                     handleDownloadTest(\r\n                                       subject.subject,\r\n                                       test.testName\r\n                                     )\r\n                                   }\r\n                                 >\r\n                                   Download\r\n                                 </MDBBtn>\r\n                               </td>\r\n                             </tr>\r\n                           ))}\r\n                         </MDBTableBody>\r\n                       </MDBTable>\r\n                     );\r\n                   }\r\n                   return null;\r\n                 })}\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </MDBCol>\r\n       </MDBRow>\r\n     </div>\r\n   </>\r\n );\r\n\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faUserShield,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport TopNavBar from \"./Topsidenavbar/dash-basicTop-bar-Tutor-admin-Routes\";\r\nimport TutorTopNavBar from \"./Topsidenavbar/dash-basicTop-bar-Tutor-Routes\";\r\nimport { Table, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function TutorViewUsers() {\r\n  let userType = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  userType = decodedToken.userType;\r\n  const [data, setData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const currentPage = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  //  const [userType, setUserType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    currentPage.current = 1;\r\n\r\n    const interval = setInterval(getPaginatedUsers, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getAlluser = () => {\r\n    fetch(`${baseUrl}/tutorGetAllUsers`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"userData\");\r\n        setData(data.data);\r\n        //setUserType(data.data.userType);\r\n      });\r\n  };\r\n\r\n  const deleteUser = (id, name) => {\r\n    if (window.confirm(`Please Click Ok if you want to delete user ${name}`)) {\r\n      fetch(`${baseUrl}/deleteUser`, {\r\n        method: \"DELETE\",\r\n        crossDomain: true,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          userid: id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          alert(data.data);\r\n          getAlluser();\r\n        });\r\n    } else {\r\n      console.log(\"Error\");\r\n    }\r\n  };\r\n\r\n  const makeRequestToDeleteUser = (id, name) => {\r\n    if (\r\n      window.confirm(\r\n        `Please Click Ok if you want to Request Admin to delete user ${name}, admin will be notified by email.`\r\n      )\r\n    ) {\r\n      fetch(`${baseUrl}/deleteUserRequest`, {\r\n        method: \"POST\",\r\n        crossDomain: true,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          userid: id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          alert(data.data);\r\n        });\r\n    } else {\r\n      console.log(\"Error\");\r\n    }\r\n  };\r\n\r\n  function handlePageClick(e) {\r\n    console.log(e);\r\n    currentPage.current = e.selected + 1;\r\n    getPaginatedUsers();\r\n  }\r\n\r\n  function changeLimit() {\r\n    currentPage.current = 1;\r\n    getPaginatedUsers();\r\n  }\r\n\r\n  function getPaginatedUsers() {\r\n    //setLoading(true);\r\n    fetch(\r\n      `${baseUrl}/paginatedUsers?page=${currentPage.current}&limit=${limit}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"userData\");\r\n        setPageCount(data.pageCount);\r\n        setData(data.result);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    fetch(`${baseUrl}/searchUsers?email=${searchQuery}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSearchResults(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchQuery === \"\") {\r\n      setSearchResults([]);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <>\r\n      {userType === \"Admin\" ? <TopNavBar /> : <TutorTopNavBar />}\r\n\r\n      <br />\r\n      <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"auth-inner\" style={{ width: \"900px\" }}>\r\n          <h3>View All Users</h3>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by Email\"\r\n              aria-describedby=\"button-addon2\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              id=\"button-addon2\"\r\n              onClick={handleSearch}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>New User Email</th>\r\n                <th>Phone Number</th>\r\n                <th>User Type</th>\r\n                <th>Verification</th>\r\n                <th>Status</th>\r\n                <th>Delete User</th>\r\n              </tr>\r\n            </thead>\r\n            {loading ? (\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan=\"6\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        height: \"200px\",\r\n                      }}\r\n                    >\r\n                      <MDBSpinner type=\"border\" color=\"secondary\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </MDBSpinner>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ) : (\r\n              <tbody>\r\n                {(searchResults.length > 0 ? searchResults : data).map((i) => (\r\n                  <tr key={i._id}>\r\n                    <td>{`${i.fname} ${i.lname}`}</td>\r\n                    <td>{i.email}</td>\r\n                    <td>{i.phoneNumber}</td>\r\n                    <td>{i.userType}</td>\r\n                    <td>\r\n                      {i.status === \"verified\" ? (\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            icon={faUserShield}\r\n                            style={{ color: \"green\" }}\r\n                          />\r\n                          <span style={{ marginLeft: \"5px\" }}>Verified</span>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            icon={faUserShield}\r\n                            style={{ color: \"yellow\" }}\r\n                          />\r\n                          <span style={{ marginLeft: \"5px\" }}>Pending</span>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {i.isOnline ? (\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            icon={faCheckCircle}\r\n                            style={{ color: \"green\" }}\r\n                          />\r\n                          <span style={{ marginLeft: \"5px\" }}>Online</span>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            icon={faTimesCircle}\r\n                            style={{ color: \"red\" }}\r\n                          />\r\n                          <span style={{ marginLeft: \"5px\" }}>Offline</span>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {userType !== \"Tutor\" ? (\r\n                        <td>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            onClick={() => deleteUser(i._id, i.fname)}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </td>\r\n                      ) : (\r\n                        <td>\r\n                          <OverlayTrigger\r\n                            placement=\"top\"\r\n                            overlay={<Tooltip>Request admin to delete</Tooltip>}\r\n                          >\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={() =>\r\n                                makeRequestToDeleteUser(i._id, i.fname)\r\n                              }\r\n                            >\r\n                              Request\r\n                            </Button>\r\n                          </OverlayTrigger>\r\n                        </td>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n          <br />\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Limit To View Users\"\r\n              aria-describedby=\"button-addon2\"\r\n              value={limit}\r\n              onChange={(e) => setLimit(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              id=\"button-addon2\"\r\n              onClick={changeLimit}\r\n            >\r\n              Set Limit\r\n            </button>\r\n          </div>\r\n          <br />\r\n\r\n          <ReactPaginate\r\n            breakLabel=\"...\"\r\n            nextLabel=\"next >\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={10}\r\n            pageCount={pageCount}\r\n            previousLabel=\"< previous\"\r\n            renderOnZeroPageCount={null}\r\n            marginPagesDisplayed={2}\r\n            containerClassName=\"pagination justify-content-center\"\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            previousClassName=\"page-item\"\r\n            previousLinkClassName=\"page-link\"\r\n            nextClassName=\"page-item\"\r\n            nextLinkClassName=\"page-link\"\r\n            activeClassName=\"active\"\r\n            forcePage={currentPage.current - 1}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <MDBSpinner role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </MDBSpinner>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MDBNavbar, MDBContainer, MDBNavbarBrand } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <MDBNavbar sticky light bgColor=\"light\">\r\n        <MDBContainer fluid className=\"d-flex justify-content-center\">\r\n          <MDBNavbarBrand href=\"#\">Test Page</MDBNavbarBrand>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </>\r\n  );\r\n}\r\n","// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import { Button, Card, Container } from \"react-bootstrap\";\r\n// import moment from \"moment\";\r\n// import \"moment-duration-format\";\r\n// import \"./Styles/examPage.css\";\r\n// import jwt_decode from \"jwt-decode\";\r\n// import Badge from \"react-bootstrap/Badge\";\r\n// import Stack from \"react-bootstrap/Stack\";\r\n// import Spinner from \"../Components/Spinner\"\r\n// import Topbar from '../Pages/Topsidenavbar/takeExamTopbar'\r\n// const baseUrl = require(\"../config\");\r\n\r\n\r\n// export default function StudentTakeTest() {\r\n//   let id = null;\r\n//   const token = window.localStorage.getItem(\"token\");\r\n//   const decodedToken = jwt_decode(token);\r\n//   id = decodedToken.userId;\r\n//   const navigate = useNavigate();\r\n//   console.log(id);\r\n\r\n//   const [test, setTest] = useState(null);\r\n//   const [userAnswers, setUserAnswers] = useState({});\r\n//   const [timeRemaining, setTimeRemaining] = useState(0);\r\n//   const { subjectname, taketestid } = useParams();\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const timeRemainingFormatted = moment\r\n//   .duration(timeRemaining, \"seconds\")\r\n//   .format(\"mm:ss\", { trim: false });\r\n  \r\n//   console.log(timeRemaining);\r\n\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"Fetching test data...\");\r\n//     fetch(`${baseUrl}/studentViewTest/${taketestid}`, {\r\n//       method: \"GET\",\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setTest(data.data);\r\n//         setTimeRemaining(\r\n//           moment.duration(data.data.timeLimit, \"minutes\").asSeconds()\r\n//         );\r\n//         console.log(data);\r\n//         if (data[\"status\"] === \"ok\") {\r\n//            //alert(\"Reminder: Do not Refresh the page or else your test will be submitted.\")\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//       });\r\n//     console.log(\"Finished fetching test data...\");\r\n//   }, [taketestid]);\r\n\r\n//   useEffect(() => {\r\n//     const timer = setInterval(() => {\r\n//       setTimeRemaining((prevTime) => prevTime - 1);\r\n//     }, 1000);\r\n//     return () => clearInterval(timer);\r\n//   }, []);\r\n\r\n\r\n\r\n//   const handleAnswerSelect = (questionIndex, selectedOption) => {\r\n//     setUserAnswers((prevAnswers) => ({\r\n//       ...prevAnswers,\r\n//       [questionIndex]: selectedOption,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubmitTest = async () => {\r\n//     console.log(userAnswers);\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${baseUrl}/${id}/${subjectname}/tests/${taketestid}/submit`,\r\n//         {\r\n//           method: \"POST\",\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//           body: JSON.stringify({\r\n//             answers: userAnswers,\r\n//           }),\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       console.log(data);\r\n//       alert(data.message);\r\n//       setSubmitted(true);\r\n//       navigate(\"/dashboard\");\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const totalSeconds = timeRemaining * 60; // Convert minutes to seconds\r\n\r\n//     if (totalSeconds <= 0 && timeRemaining << 0) {\r\n//       handleSubmitTest();\r\n//     }\r\n//   }, [timeRemaining]);\r\n\r\n\r\n//   useEffect(() => {\r\n//     const handleBackButton = () => {\r\n//       if (\r\n//         window.confirm(\r\n//           \"Are you sure you want to leave? YOUR ANSWERS WILL BE SUBMITTED!!\"\r\n//         )\r\n//       ) {\r\n//         handleSubmitTest();\r\n//       }\r\n//     };\r\n    \r\n//     window.history.pushState(null, null, window.location.pathname);\r\n//     window.addEventListener(\"popstate\", handleBackButton);\r\n\r\n//     return () => {\r\n//       window.removeEventListener(\"popstate\", handleBackButton);\r\n//     };\r\n//   }, []);\r\n  \r\n\r\n//   // useEffect(() => {\r\n//   //   const handleBeforeUnload = (event) => {\r\n//   //     event.preventDefault();\r\n//   //     event.returnValue = \"\";\r\n//   //     if (\r\n//   //       window.confirm(\r\n//   //         \"Are you sure you want to Refresh? YOUR ANSWERS WILL BE SUBMITTED!!\"\r\n//   //       )\r\n//   //     ) {\r\n//   //       handleSubmitTest();\r\n//   //     }\r\n//   //   };\r\n\r\n//   //   window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n//   //   return () => {\r\n//   //     window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n//   //   };\r\n//   // }, []);\r\n\r\n//   if (!test) {\r\n//     return (\r\n//       <div>\r\n//         <Spinner />\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <Topbar />\r\n//       <br />\r\n   \r\n//         <div className=\"container-wrapper\">\r\n//           <div className=\"container-inner\">\r\n//             <Container>\r\n//               <h1>{test.name}</h1>\r\n//               <div className=\"exam-heading\">\r\n//                 <br />\r\n//                 <Stack direction=\"vertical\" gap={2}>\r\n//                   <Badge bg=\"primary\">Goodluck!</Badge>\r\n//                   <Badge bg=\"success\">\r\n//                     Submit your test once you have completed.\r\n//                   </Badge>\r\n//                   <Badge bg=\"danger\">\r\n//                     Do not refresh the page!Or else your test will be\r\n//                     submitted!!\r\n//                   </Badge>\r\n//                   <Badge bg=\"warning\" text=\"dark\">\r\n//                     Do not navigate to other pages! Your test will auto submit\r\n//                     if you try to navigate.\r\n//                   </Badge>\r\n//                 </Stack>\r\n//                 <div className=\"time-remaining p-4\">\r\n//                   <Card>\r\n//                     <Card.Body>\r\n//                       Time Remaining:\r\n//                       <p>{timeRemainingFormatted}</p>\r\n//                     </Card.Body>\r\n//                   </Card>\r\n//                 </div>\r\n//               </div>\r\n//               <h3>Answer all the questions below:</h3>\r\n//               <Card className=\"question-card\">\r\n//                 <Card.Body>\r\n//                   {test.questions.map((question, index) => (\r\n//                     <div key={index} className=\"unselectable\">\r\n//                       <h5>{`Q${index + 1}. ${question.question}`}</h5>\r\n//                       <div className=\"options\">\r\n//                         {question.options.map((option, optionIndex) => (\r\n//                           <div\r\n//                             key={optionIndex}\r\n//                             className={`option-button ${\r\n//                               userAnswers[index] === option ? \"selected\" : \"\"\r\n//                             }`}\r\n//                             onClick={() => handleAnswerSelect(index, option)}\r\n//                           >\r\n//                             {option}\r\n//                           </div>\r\n//                         ))}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </Card.Body>\r\n//               </Card>\r\n//               <div className=\"submit-btn\">\r\n//                 <Button variant=\"success\" onClick={handleSubmitTest}>\r\n//                   Submit Test\r\n//                 </Button>\r\n//               </div>\r\n//             </Container>\r\n//           </div>\r\n//         </div>\r\n\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Button, Card, Container } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport \"moment-duration-format\";\r\nimport \"./Styles/examPage.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Stack from \"react-bootstrap/Stack\";\r\nimport Spinner from \"../Components/Spinner\";\r\nimport Topbar from \"../Pages/Topsidenavbar/takeExamTopbar\";\r\nconst baseUrl = require(\"../config\");\r\n\r\nexport default function StudentTakeTest() {\r\n  let id = null;\r\n  const token = window.localStorage.getItem(\"token\");\r\n  const decodedToken = jwt_decode(token);\r\n  id = decodedToken.userId;\r\n  const navigate = useNavigate();\r\n  console.log(id);\r\n\r\n  const [test, setTest] = useState(null);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [timeRemaining, setTimeRemaining] = useState(0);\r\n  const { subjectname, taketestid } = useParams();\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [initialTimestamp, setInitialTimestamp] = useState(null);\r\n  const timeRemainingFormatted = moment\r\n    .duration(timeRemaining, \"seconds\")\r\n    .format(\"mm:ss\", { trim: false });\r\n\r\n  console.log(timeRemaining);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Fetching test data...\");\r\n    fetch(`${baseUrl}/studentViewTest/${taketestid}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTest(data.data);\r\n        setTimeRemaining(\r\n          moment.duration(data.data.timeLimit, \"minutes\").asSeconds()\r\n        );\r\n        const storedTimestamp = localStorage.getItem(\"initialTimestamp\");\r\n        if (storedTimestamp) {\r\n          setInitialTimestamp(parseInt(storedTimestamp, 10));\r\n        } else {\r\n          setInitialTimestamp(Date.now());\r\n          localStorage.setItem(\"initialTimestamp\", Date.now().toString());\r\n        }\r\n        console.log(data);\r\n        if (data[\"status\"] === \"ok\") {\r\n          //alert(\"Reminder: Do not Refresh the page or else your test will be submitted.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    console.log(\"Finished fetching test data...\");\r\n  }, [taketestid]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const elapsedSeconds = Math.floor(\r\n        (currentTime - initialTimestamp) / 1000\r\n      );\r\n      const remainingSeconds = timeRemaining - elapsedSeconds;\r\n\r\n         const totalSeconds = remainingSeconds * 60;\r\n      if (remainingSeconds <= 0 && totalSeconds << 0) {\r\n        handleSubmitTest();\r\n      } else {\r\n        setTimeRemaining(remainingSeconds);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [initialTimestamp]);\r\n\r\n  const handleAnswerSelect = (questionIndex, selectedOption) => {\r\n    setUserAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [questionIndex]: selectedOption,\r\n    }));\r\n  };\r\n\r\n  const handleSubmitTest = async () => {\r\n    console.log(userAnswers);\r\n    try {\r\n      const response = await fetch(\r\n        `${baseUrl}/${id}/${subjectname}/tests/${taketestid}/submit`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            answers: userAnswers,\r\n          }),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      alert(data.message);\r\n      setSubmitted(true);\r\n      localStorage.removeItem(\"initialTimestamp\");\r\n      navigate(\"/dashboard\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleBackButton = () => {\r\n      if (\r\n        window.confirm(\r\n          \"Are you sure you want to leave? YOUR ANSWERS WILL BE SUBMITTED!!\"\r\n        )\r\n      ) {\r\n        handleSubmitTest();\r\n      }\r\n    };\r\n\r\n    window.history.pushState(null, null, window.location.pathname);\r\n    window.addEventListener(\"popstate\", handleBackButton);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", handleBackButton);\r\n    };\r\n  }, []);\r\n\r\n  if (!test) {\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <br />\r\n\r\n      <div className=\"container-wrapper\">\r\n        <div className=\"container-inner\">\r\n          <Container>\r\n            <h1>{test.name}</h1>\r\n            <div className=\"exam-heading\">\r\n              <br />\r\n              <Stack direction=\"vertical\" gap={2}>\r\n                <Badge bg=\"primary\">Goodluck!</Badge>\r\n                <Badge bg=\"success\">\r\n                  Submit your test once you have completed.\r\n                </Badge>\r\n                <Badge bg=\"danger\">\r\n                  Do not refresh the page! Or else your test will be submitted!!\r\n                </Badge>\r\n                <Badge bg=\"warning\" text=\"dark\">\r\n                  Do not navigate to other pages! Your test will auto submit if\r\n                  you try to navigate.\r\n                </Badge>\r\n              </Stack>\r\n              <div className=\"time-remaining p-4\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    Time Remaining:\r\n                    <p>{timeRemainingFormatted}</p>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n            <h3>Answer all the questions below:</h3>\r\n            <Card className=\"question-card\">\r\n              <Card.Body>\r\n                {test.questions.map((question, index) => (\r\n                  <div key={index} className=\"unselectable\">\r\n                    <h5>{`Q${index + 1}. ${question.question}`}</h5>\r\n                    <div className=\"options\">\r\n                      {question.options.map((option, optionIndex) => (\r\n                        <div\r\n                          key={optionIndex}\r\n                          className={`option-button ${\r\n                            userAnswers[index] === option ? \"selected\" : \"\"\r\n                          }`}\r\n                          onClick={() => handleAnswerSelect(index, option)}\r\n                        >\r\n                          {option}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n            <div className=\"submit-btn\">\r\n              <Button variant=\"success\" onClick={handleSubmitTest}>\r\n                Submit Test\r\n              </Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport StudentTopNavBar from \"../Pages/Topsidenavbar/dash-basicTop-bar-Students-Routes\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function StudentViewResults() {\r\n    let userId = null;\r\n    const token = window.localStorage.getItem('token');\r\n    const decodedToken = jwt_decode(token);\r\n    userId = decodedToken.userId;\r\n    const [studentResults, setStudentResults] = useState([]);\r\n\r\n    console.log(userId);\r\n\r\n    useEffect(() => {\r\n      const fetchResults = async () => {\r\n        const results = await fetchStudentResults(userId);\r\n        setStudentResults(results);\r\n      };\r\n\r\n      fetchResults();\r\n    }, [userId]);\r\n \r\n    const fetchStudentResults = async (userId) => {\r\n      try {\r\n        const response = await fetch(`${baseUrl}/getStudentResults`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ userId }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          return data.studentResults;\r\n        } else {\r\n          console.log(data);\r\n          throw new Error(data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <StudentTopNavBar />\r\n      <br />\r\n      <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"auth-inner\" style={{ width: 800 }}>\r\n          <h1>Taken Test Results</h1>\r\n\r\n          <div className=\"text-success\" style={{ fontSize: \"12px\" }}>\r\n            The passing marks is 40%.\r\n          </div>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Test Name</th>\r\n                <th>Subject</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Score</th>\r\n                <th>Total Percentage</th>\r\n                <th>Grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {studentResults.map((result, index) => (\r\n                <tr key={result._id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{result.testname}</td>\r\n                  <td>{result.subject}</td>\r\n                  <td>{new Date(result.date).toLocaleDateString()}</td>\r\n                  <td>{new Date(result.date).toLocaleTimeString()}</td>\r\n                  <td>{`${result.score}/${result.totalQuestions}`}</td>\r\n                  <td>{result.percentageScore.toFixed(2)}</td>\r\n                  {result.percentageScore >= 40 ? (\r\n                    <button type=\"button\" className=\"btn btn-pass disabled\">\r\n                      <strong>Pass</strong>\r\n                    </button>\r\n                  ) : (\r\n                    <button type=\"button\" className=\"btn btn-fail disabled\">\r\n                      <strong>Fail</strong>\r\n                    </button>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { BsPlay } from \"react-icons/bs\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport StudentTopNavBar from '../Pages/Topsidenavbar/dash-basicTop-bar-Students-Routes'\r\nimport {  Button, Modal, Form } from \"react-bootstrap\";\r\nconst baseUrl = require(\"../config\");\r\nexport default function SubjectTests() {\r\n   const [tests, setTests] = useState([]);\r\n   const [testPassword, settestPassword] = useState('');\r\n   const [show, setShow] = useState(false);\r\n    const location = useLocation();\r\n    // const userData = location.state.userData;\r\n    const  id  = location.state.id;\r\n    // console.log(userData,\"Userdata\");\r\n    console.log(id,\"id\");\r\n   const navigate = useNavigate();\r\n   const [currentTest, setCurrentTest] = useState(null);\r\n   \r\n\r\n  const handleShow = (subjectname, taketestid) => {\r\n    setCurrentTest({ subjectname, taketestid });\r\n    setShow(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    settestPassword(\"\");\r\n  };\r\n\r\n   //console.log(tests);\r\n   useEffect(() => {\r\n     async function fetchData() {\r\n       const res = await fetch(`${baseUrl}/subTests`);\r\n       const data = await res.json();\r\n       setTests(data.data);\r\n     }\r\n     fetchData();\r\n   }, []);\r\n\r\n\r\n   function takeTest(subjectname, taketestid) {\r\n     console.log(subjectname, taketestid, testPassword);\r\n     \r\n     fetch(`${baseUrl}/${id}/checkUserTakenTest/${taketestid}`, {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n       },\r\n       body: JSON.stringify({\r\n         testPassword: testPassword,\r\n       }),\r\n     })\r\n       .then((response) => response.json())\r\n       .then((data) => {\r\n         console.log(data);\r\n         if (data.message === \"You have already taken the test\") {\r\n           setShow(false);\r\n           settestPassword('');\r\n           alert(data.message);\r\n         }\r\n         if (data.message === \"Wrong password\") {\r\n           setShow(false);\r\n           settestPassword('');\r\n           alert(data.message);\r\n         }\r\n         if (data.message === \"OK\") {\r\n           navigate(`/dashboard/SubjectTests/${subjectname}/${taketestid}`, {\r\n             state: {\r\n               id,\r\n             },\r\n           });\r\n         }\r\n       })\r\n       .catch((error) => console.error(error));    \r\n   }\r\n\r\n\r\n  return (\r\n    <>\r\n      <StudentTopNavBar />\r\n      <br />\r\n      <div className=\"auth-wrapper\" style={{ height: \"auto\" }}>\r\n        <div className=\"auth-inner\" style={{ width: \"auto\" }}>\r\n          <h2>All Tests:</h2>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Subject</th>\r\n                <th>Name</th>\r\n                <th>Date</th>\r\n                <th>Time Limit</th>\r\n                <th>Take Exam</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tests.map((test) => (\r\n                <tr key={test._id}>\r\n                  <td>{test.subject}</td>\r\n                  <td>{test.name}</td>\r\n                  <td>{new Date(test.date).toISOString().slice(0, 10)}</td>\r\n                  <td>{test.timeLimit} min</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => handleShow(test.subject, test._id)}\r\n                    >\r\n                      <BsPlay /> Take Test\r\n                    </button>\r\n                    <Modal show={show} onHide={handleClose} animation={true}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Password</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <Form>\r\n                          <Form.Group\r\n                            className=\"mb-3\"\r\n                            controlId=\"exampleForm.ControlInput1\"\r\n                          >\r\n                            <Form.Label>Key in password for the test</Form.Label>\r\n                            <Form.Control\r\n                              type=\"password\"\r\n                              placeholder=\"Password\"\r\n                              value={testPassword}\r\n                              onChange={(e) => settestPassword(e.target.value)}\r\n                              autoFocus\r\n                            />\r\n                          </Form.Group>\r\n                        </Form>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                          Close\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          onClick={() =>\r\n                            takeTest(\r\n                              currentTest.subjectname,\r\n                              currentTest.taketestid\r\n                            )\r\n                          }\r\n                        >\r\n                          Ok\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n      {/* Modal Popup */}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","import React, {lazy , Suspense} from 'react';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { Navigate, Outlet } from 'react-router';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Login from './Pages/login';\r\nimport SignUp from './Pages/signup';\r\n//import Dashboard from './Pages/dashboard';\r\nimport ResetPassword from './Pages/resetpassword';\r\nimport ViewUsers from './Pages/ViewUsers';\r\nimport EditProfile from './Pages/editProfile';\r\nimport CreateUser from './Pages/createUser';\r\nimport CreateExamForm from './Exam/createExam'\r\nimport ErrorPage from './Pages/ErrorPage'\r\nimport ViewSubject from './Exam/viewSubjects';\r\nimport ViewTest from \"./Exam/ViewTest\";\r\nimport ViewQuestions from './Exam/viewQuestions';\r\nimport TutorEditTestQuestions from './Exam/tutorEditQuestions';\r\nimport AdminViewTestsList from \"./Exam/viewResults-Subject-Test\";\r\nimport AdminViewAllStudentResults from './Exam/viewResults-Test-allStudentResults';\r\nimport AdminApproveUser from './Pages/adminUserApproval';\r\nimport TutorViewSubjectsAndTests from './Exam/tutorViewSubjects-Test';\r\nimport TutorViewStudentResults from './Exam/tutorViewResults-Subject-Test';\r\nimport TutorViewUsers from './Pages/tutorViewUsers';\r\nimport StudentTakeTest from './Exam/studentTakeTest';\r\nimport StudentViewResults from './Exam/studentViewResults';\r\nimport SubjectTests from './Exam/studentViewTest';\r\nimport Spinner from './Components/LoaderSpinner';\r\nimport { Alert } from 'react-bootstrap';\r\nconst Dashboard = lazy(() => import(\"./Pages/dashboard\"));\r\nconst baseUrl = require(\"./config\");\r\n\r\nfunction App() {\r\n  const isLoggedIn = window.localStorage.getItem(\"loggedIn\");\r\n  const token = window.localStorage.getItem('token');\r\n  let userType = null;\r\n\r\n  const useAuth = () => {\r\n  if (token) {\r\n     const decodedToken = jwt_decode(token);\r\n    userType = decodedToken.userType;\r\n    return { isLoggedIn: true, userType: userType };\r\n  }\r\n}\r\n\r\n  //  setInterval(async () => {\r\n  //    try {\r\n  //      await axios.get(`${baseUrl}/ping`); // Send a request to the server to keep the connection active\r\n  //    } catch (error) {\r\n  //      // Handle error\r\n  //      alert(\"Internet Connection Cut\")\r\n  //      console.log(\"Internet connection cut\");\r\n  //    }\r\n  //  }, 15000);\r\n\r\n  const ProtectedRoutes = () => {\r\n    const { isLoggedIn, userType } = useAuth();\r\n    const allowedUserTypes = [\"Admin\"];\r\n    return isLoggedIn && allowedUserTypes.includes(userType) ? (\r\n      <Outlet />\r\n    ) : (\r\n      <Navigate to=\"/\" />\r\n    );\r\n  };\r\n\r\n  const TutorProtectedRoutes = () => {\r\n    const { isLoggedIn, userType } = useAuth();\r\n    const allowedUserTypes = [\"Tutor\"];\r\n    return isLoggedIn && allowedUserTypes.includes(userType) ? (\r\n      <Outlet />\r\n    ) : (\r\n      <Navigate to=\"/\" />\r\n    );\r\n  };\r\n\r\n  \r\n  return (\r\n    <Router>\r\n      <Suspense fallback={<Spinner />}>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={isLoggedIn === \"true\" ? <Dashboard /> : <Login />}\r\n          />\r\n          <Route path=\"/sign-in\" element={<Login />} />\r\n          <Route path=\"/forgot-password\" element={<ResetPassword />} />\r\n          <Route path=\"/sign-up\" element={<SignUp />} />\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          \r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route path=\"/dashboard/getAllUsers\" element={<ViewUsers />} />\r\n          </Route>\r\n          <Route\r\n            path=\"/dashboard/updateProfile/:id\"\r\n            element={<EditProfile />}\r\n          />\r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route path=\"/dashboard/createUser\" element={<CreateUser />} />\r\n          </Route>\r\n          <Route path=\"/\" element={<TutorProtectedRoutes />}>\r\n            <Route path=\"/dashboard/createExam\" element={<CreateExamForm />} />\r\n          </Route>\r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route path=\"dashboard/subjects\" element={<ViewSubject />} />\r\n          </Route>\r\n          <Route path=\"/\" element={<TutorProtectedRoutes />}>\r\n            <Route\r\n              path=\"/subjects/:id\"\r\n              element={<TutorViewSubjectsAndTests />}\r\n            />\r\n          </Route>\r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route path=\"/subjects/:subject/tests\" element={<ViewTest />} />\r\n          </Route>\r\n          <Route\r\n            path=\"/subjects/:subject/tests/:testid\"\r\n            element={<ViewQuestions />}\r\n          />\r\n          <Route path=\"/dashboard/SubjectTests\" element={<SubjectTests />} />\r\n          <Route\r\n            path=\"/dashboard/SubjectTests/:subjectname/:taketestid\"\r\n            element={<StudentTakeTest />}\r\n          />\r\n          <Route path=\"/\" element={<TutorProtectedRoutes />}>\r\n            <Route\r\n              path=\"/subjects/:testname/editQuestions/:testid\"\r\n              element={<TutorEditTestQuestions />}\r\n            />\r\n          </Route>\r\n          TutorViewUsers\r\n          <Route path=\"/\" element={<TutorProtectedRoutes />}>\r\n            <Route\r\n              path=\"/dashboard/tutorViewUsers\"\r\n              element={<TutorViewUsers />}\r\n            />\r\n          </Route>\r\n          <Route\r\n            path=\"/dashboard/viewTestResults\"\r\n            element={<StudentViewResults />}\r\n          />\r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route\r\n              path=\"/dashboard/adminApproveUser\"\r\n              element={<AdminApproveUser />}\r\n            />\r\n          </Route>\r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route\r\n              path=\"/dashboard/viewResultsTestsLists\"\r\n              element={<AdminViewTestsList />}\r\n            />\r\n          </Route>\r\n          <Route path=\"/\" element={<ProtectedRoutes />}>\r\n            <Route\r\n              path=\"/dashboard/viewResultsTestsLists/:subject/:testId\"\r\n              element={<AdminViewAllStudentResults />}\r\n            />\r\n          </Route>\r\n          <Route path=\"/\" element={<TutorProtectedRoutes />}>\r\n            <Route\r\n              path=\"/dashboard/tutorViewStudentResults/:userId\"\r\n              element={<TutorViewStudentResults />}\r\n            />\r\n          </Route>\r\n          <Route path=\"*\" element={<ErrorPage />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n}\r\nexport default App\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\n// import './bootstrap.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render( <React.StrictMode>< App/></React.StrictMode>);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}